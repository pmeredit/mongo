# Amazon build variants for testing development environments
#
# After the branching variants in this file
# should NOT run on a new rapid release (v7.1, v7.2 etc.)
# and LTS release (v7.0, v6.0 etc.) branch projects

variables:
  # THIS HAS COPIES IN:
  # - etc/evergreen_yml_components/variants/amazon/test_dev_master_branch_only.yml
  # - etc/evergreen_yml_components/variants/amazon/test_dev.yml
  # ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
  - &linux-arm64-dynamic-compile-params # Essential set of compile parameters used for Linux dev variants.
    run_on:
      - amazon2-arm64-latest-large
    activate: true # These compile variants run on every commit to reduce latency of the auto-reverter.
    stepback: false

  - &linux-arm64-dynamic-enterprise-compile-expansions
    scons_cache_scope: shared
    scons_cache_mode: all
    has_packages: false
    compile_flags: >-
      --ssl
      MONGO_DISTMOD=amazon2
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --link-model=dynamic

  # THIS HAS COPIES IN:
  # - etc/evergreen_yml_components/variants/amazon/test_dev_master_branch_only.yml
  # - etc/evergreen_yml_components/variants/amazon/test_dev.yml
  # ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
  - &amazon_linux2_arm64_static_compile_variant_dependency
    depends_on:
      - name: archive_dist_test
        variant: &amazon_linux2_arm64_static_compile_variant_name amazon-linux2-arm64-static-compile
      - name: archive_jstestshell
        variant: *amazon_linux2_arm64_static_compile_variant_name
      - name: version_gen
        variant: generate-tasks-for-version
        # This is added because of EVG-18211.
        # Without this we are adding extra dependencies on evergreen and it is causing strain
        omit_generated_tasks: true
    # - name: generate_buildid_to_debug_symbols_mapping
    #   variant: amazon-linux2-arm64-static-compile

  # THIS HAS COPIES IN:
  # - etc/evergreen_yml_components/variants/amazon/test_dev_master_branch_only.yml
  # - etc/evergreen_yml_components/variants/amazon/test_dev.yml
  # ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
  - &linux_arm64_generic_expansions
    multiversion_platform: amazon2
    multiversion_edition: enterprise
    multiversion_architecture: aarch64
    packager_arch: aarch64
    packager_distro: amazon2
    repo_edition: enterprise
    large_distro_name: amazon2-arm64-atlas-latest-large
    core_analyzer_distro_name: amazon2-arm64-latest-xlarge
    num_scons_link_jobs_available: 0.99

  # THIS HAS COPIES IN:
  # - etc/evergreen_yml_components/variants/amazon/test_dev_master_branch_only.yml
  # - etc/evergreen_yml_components/variants/amazon/test_dev.yml
  # ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
  - &amazon_linux2_arm64_dynamic_expansions
    <<: *linux_arm64_generic_expansions
    compile_variant: *amazon_linux2_arm64_static_compile_variant_name

buildvariants:
  - <<: *linux-arm64-dynamic-compile-params
    name: &amazon-linux2-arm64-stitch-compile amazon-linux2-arm64-stitch-compile
    display_name: "* Amazon Linux 2 arm64 Enterprise Stitch Compile"
    tags: ["suggested", "bazel_check"]
    expansions:
      <<: *linux-arm64-dynamic-enterprise-compile-expansions
      compile_variant: *amazon-linux2-arm64-stitch-compile
    tasks:
      - name: .stitch

  - <<: *linux-arm64-dynamic-compile-params
    name: &amazon-linux2-arm64-dev-compile amazon-linux2-arm64-dev-compile
    display_name: "* Amazon Linux 2 arm64 Enterprise Dev Compile"
    tags: ["suggested"]
    expansions:
      <<: *linux-arm64-dynamic-enterprise-compile-expansions
      compile_variant: *amazon-linux2-arm64-dev-compile
    tasks:
      - name: scons_compile_smoke_test_TG
      - name: ninja_compile_smoke_test_TG

  # Caching is purposefully disabled on this variant so we can benchmark consistent build times.
  - name: &amazon-linux2-arm64-local-compile amazon-linux2-arm64-local-compile
    display_name: "Amazon Linux 2 arm64 Local Compile"
    tags: []
    cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - amazon2-arm64-latest-large
    expansions:
      scons_cache_scope: none
      compile_flags: >-
        --ssl
        MONGO_DISTMOD=amazon2
        -j$(grep -c ^processor /proc/cpuinfo)
        --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
        --link-model=dynamic
        BAZEL_FLAGS=--config=local
      compile_variant: *amazon-linux2-arm64-local-compile
    tasks:
      - name: compile_test_parallel_unittest_stream_TG
      - name: compile_test_parallel_core_stream_TG

  # Note that this task is currently optional;
  # This will eventually become suggested, then required.
  - name: &amazon-linux-2023-arm64-bazel-compile amazon-linux-2023-arm64-bazel-compile
    display_name: "Amazon Linux 2023.3 Enterprise arm64 Bazel Compile"
    tags: ["bazel_check"]
    cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - amazon2023.3-arm64-large
    stepback: false
    expansions:
      compile_variant: *amazon-linux-2023-arm64-bazel-compile
    tasks:
      - name: compile_bazel_TG
      - name: run_bazel_TG
      - name: compile_bazel_ninja_TG

  # Note that this task is currently optional;
  # This will eventually become suggested, then required.
  - name: &rhel81-ppc64le-bazel-compile rhel81-ppc64le-bazel-compile
    display_name: "RHEL 8.1 PPC64LE Bazel Compile"
    tags: ["bazel_check"]
    cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - rhel81-power8-large
    stepback: false
    expansions:
      compile_variant: *rhel81-ppc64le-bazel-compile
      compile_flags: >-
        --ssl
        MONGO_DISTMOD=rhel81
        -j$(echo "$(grep -c processor /proc/cpuinfo)/2" | bc)
        --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
    tasks:
      - name: compile_bazel_TG

  # Note that this task is currently optional;
  # This will eventually become suggested, then required.
  - name: &rhel83-s390x-bazel-compile rhel83-s390x-bazel-compile
    display_name: "RHEL 8.3 S390X Bazel Compile"
    tags: ["bazel_check"]
    cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - rhel83-zseries-large
    stepback: false
    expansions:
      compile_variant: *rhel83-s390x-bazel-compile
      compile_flags: >-
        --ssl
        MONGO_DISTMOD=rhel83
        -j3
        --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
        --linker=gold
    tasks:
      - name: compile_bazel_TG

  - &enterprise-amazon-linux2-arm64-all-feature-flags-template
    <<: *amazon_linux2_arm64_static_compile_variant_dependency
    name: enterprise-amazon-linux2-arm64-all-feature-flags
    display_name: "! Amazon Linux 2 arm64 Atlas Enterprise (all feature flags)"
    tags: ["required", "forbid_tasks_tagged_with_experimental"]
    cron: "0 */4 * * *" # From the ${project_required_suggested_cron} parameter
    run_on:
      - amazon2-arm64-atlas-latest-small
    stepback: true
    expansions:
      <<: *amazon_linux2_arm64_dynamic_expansions
      scons_cache_scope: shared
      scons_cache_mode: all
      has_packages: false
      jstestfuzz_num_generated_files: 40
      jstestfuzz_concurrent_num_files: 10
      target_resmoke_time: 10
      max_sub_suites: 5
      idle_timeout_factor: 1.5
      exec_timeout_factor: 1.5
      test_flags: >-
        --runAllFeatureFlagTests
        --excludeWithAnyTags=incompatible_with_amazon_linux,requires_ldap_pool,requires_external_data_source,incompatible_with_atlas_environment
    tasks:
      - name: search_end_to_end_sharded_cluster
      - name: search_end_to_end_single_node
      - name: .development_critical !.requires_large_host !.requires_compile_variant !.incompatible_development_variant !.incompatible_all_feature_flags !.suggested_excluding_required__for_devprod_mitigation_only
      - name: .development_critical .requires_large_host !.requires_compile_variant !.incompatible_development_variant !.incompatible_all_feature_flags !.suggested_excluding_required__for_devprod_mitigation_only
        distros:
          - amazon2-arm64-atlas-latest-large
      - name: .release_critical !.requires_large_host !.requires_compile_variant !.incompatible_development_variant !.incompatible_all_feature_flags !.suggested_excluding_required__for_devprod_mitigation_only
      - name: .release_critical .requires_large_host !.requires_compile_variant !.incompatible_development_variant !.incompatible_all_feature_flags !.suggested_excluding_required__for_devprod_mitigation_only
        distros:
          - amazon2-arm64-atlas-latest-large
      - name: .default !.requires_large_host !.requires_compile_variant !.incompatible_development_variant !.incompatible_all_feature_flags !.suggested_excluding_required__for_devprod_mitigation_only
      - name: .default .requires_large_host !.requires_compile_variant !.incompatible_development_variant !.incompatible_all_feature_flags !.suggested_excluding_required__for_devprod_mitigation_only
        distros:
          - amazon2-arm64-atlas-latest-large
      - name: .fuzzer_deterministic

  - <<: *enterprise-amazon-linux2-arm64-all-feature-flags-template
    name: enterprise-amazon-linux2-arm64-all-feature-flags-fuzzers
    display_name: "*| Amazon Linux 2 arm64 Enterprise (all feature flags) Fuzzers"
    tags: ["suggested"]
    tasks:
      - name: .aggfuzzer
      - name: .change_stream_fuzzer
      - name: .config_fuzzer .suggested_excluding_required__for_devprod_mitigation_only
      - name: .config_fuzzer_stress .suggested_excluding_required__for_devprod_mitigation_only
      - name: .query_fuzzer
      - name: .updatefuzzer
      - name: .jstestfuzz

  - <<: *enterprise-amazon-linux2-arm64-all-feature-flags-template
    name: enterprise-amazon-linux2-arm64-all-feature-flags-cluster-scalability-only
    display_name: "*| Amazon Linux 2 arm64 Enterprise (all feature flags) Cluster Scalability Patch Only"
    tags: ["cluster_scalability_only", "suggested"]
    tasks:
      - name: .cluster_scalability_only

  - <<: *enterprise-amazon-linux2-arm64-all-feature-flags-template
    name: enterprise-amazon-linux2-arm64-all-feature-flags-embedded-router
    display_name: "*| Amazon Linux 2 arm64 Enterprise (all feature flags) Embedded Router Tasks"
    tags: ["suggested"]
    tasks:
      - name: .embedded_router

  - <<: *enterprise-amazon-linux2-arm64-all-feature-flags-template
    name: enterprise-amazon-linux2-arm64-all-feature-flags-magic-restore
    display_name: "*| Amazon Linux 2 arm64 Enterprise (all feature flags) Magic Restore Tasks"
    tags: ["suggested"]
    tasks:
      - name: .magic_restore

  - name: &al2023-arm64-sep-benchmark al2023-arm64-sep-benchmark
    display_name: "! AL2023.3 arm64 Enterprise (SEP Benchmark)"
    tags: ["required"]
    cron: "0 */4 * * *"
    run_on:
      - amazon2023.3-arm64-large
    expansions:
      compile_flags: >-
        --ssl
        MONGO_DISTMOD=amazon2
        -j$(grep -c ^processor /proc/cpuinfo)
        --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
        --debug-symbols=minimal
      separate_debug: off
      scons_cache_scope: shared
      evergreen_remote_exec: on
      compile_variant: *al2023-arm64-sep-benchmark
    tasks:
      - name: .benchmarks_sep

  ### Query Patch-Specific Build Variants ###

  - <<: *amazon_linux2_arm64_static_compile_variant_dependency
    name: amazon_linux2_arm64_static-classic-engine-query-patch-only
    display_name: "~ Amazon Linux 2 arm64 Enterprise Query Patch Only (Classic Engine)"
    tags: []
    cron: "0 4 * * 0" # From the ${project_weekly_cron} parameter # This is a patch-only variant but we run on mainline to pick up task history.
    run_on:
      - amazon2-arm64-atlas-latest-small
    stepback: false
    expansions:
      <<: *amazon_linux2_arm64_dynamic_expansions
      scons_cache_scope: shared
      scons_cache_mode: all
      has_packages: false
      jstestfuzz_num_generated_files: 20
      jstestfuzz_concurrent_num_files: 5
      target_resmoke_time: 30
      max_sub_suites: 3
      idle_timeout_factor: 1.5
      exec_timeout_factor: 1.5
      test_flags: >-
        --mongodSetParameters="{internalQueryFrameworkControl: forceClassicEngine}"
        --excludeWithAnyTags=resource_intensive
    tasks: &query-alias-task-list
      - name: .assigned_to_jira_team_server_query_execution !.requires_large_host !.aggfuzzer !.query_fuzzer !.updatefuzzer !.jstestfuzz !.benchmarks !.blocked_in_query_alias
      - name: .assigned_to_jira_team_server_query_execution .requires_large_host !.aggfuzzer !.query_fuzzer !.updatefuzzer !.jstestfuzz !.benchmarks !.blocked_in_query_alias
        distros:
          - amazon2-arm64-atlas-latest-large
      - name: .assigned_to_jira_team_server_query_optimization !.requires_large_host !.aggfuzzer !.query_fuzzer !.updatefuzzer !.change_stream_fuzzer !.jstestfuzz !.benchmarks !.blocked_in_query_alias
      - name: .assigned_to_jira_team_server_query_optimization .requires_large_host !.aggfuzzer !.query_fuzzer !.updatefuzzer !.change_stream_fuzzer !.jstestfuzz !.benchmarks !.blocked_in_query_alias
        distros:
          - amazon2-arm64-atlas-latest-large
      - name: .assigned_to_jira_team_server_query_integration !.requires_large_host !.benchmarks !.blocked_in_query_alias
      - name: .assigned_to_jira_team_server_query_integration .requires_large_host !.benchmarks !.blocked_in_query_alias
        distros:
          - amazon2-arm64-atlas-latest-large
      - name: burn_in_tests_gen
        depends_on:
          - name: version_burn_in_gen
            variant: generate-tasks-for-version
            omit_generated_tasks: true
          - name: archive_dist_test
            variant: *amazon_linux2_arm64_static_compile_variant_name
      - name: check_feature_flag_tags
      - name: check_for_todos
      - name: test_api_version_compatibility
      - name: replica_sets_jscore_passthrough_gen
      - name: sharding_jscore_passthrough_gen
      - name: sharded_collections_jscore_passthrough_gen
      - name: noPassthrough_gen
      - name: noPassthroughWithMongod_gen
      - name: initial_sync_fuzzer_sanity_patch
      - name: rollback_fuzzer_sanity_patch

  - <<: *amazon_linux2_arm64_static_compile_variant_dependency
    name: amazon_linux2_arm64_static-try-sbe-engine-query-patch-only
    display_name: "~ Amazon Linux 2 arm64 Enterprise Query Patch Only (Try SBE Engine)"
    tags: []
    cron: "0 4 * * 0" # From the ${project_weekly_cron} parameter # This is a patch-only variant but we run on mainline to pick up task history.
    run_on:
      - amazon2-arm64-atlas-latest-small
    expansions:
      expansions:
      <<: *amazon_linux2_arm64_dynamic_expansions
      scons_cache_scope: shared
      scons_cache_mode: all
      has_packages: false
      jstestfuzz_num_generated_files: 20
      jstestfuzz_concurrent_num_files: 5
      target_resmoke_time: 30
      max_sub_suites: 3
      idle_timeout_factor: 1.5
      exec_timeout_factor: 1.5
      test_flags: >-
        --mongodSetParameters="{internalQueryFrameworkControl: trySbeEngine}"
        --excludeWithAnyTags=resource_intensive
    tasks: *query-alias-task-list

  - <<: *enterprise-amazon-linux2-arm64-all-feature-flags-template
    name: enterprise-amazon-linux2-arm64-all-feature-flags-required-query-patch-only
    display_name: "~ Amazon Linux 2 arm64 Enterprise Query Patch Only (all feature flags)"
    tags: []
    cron: "0 4 * * 0" # From the ${project_weekly_cron} parameter # This is a patch-only variant but we run on mainline to pick up task history.
    expansions:
      expansions:
      <<: *amazon_linux2_arm64_dynamic_expansions
      scons_cache_scope: shared
      scons_cache_mode: all
      has_packages: false
      jstestfuzz_num_generated_files: 20
      jstestfuzz_concurrent_num_files: 5
      target_resmoke_time: 30
      max_sub_suites: 3
      idle_timeout_factor: 1.5
      exec_timeout_factor: 1.5
      test_flags: >-
        --runAllFeatureFlagTests
        --excludeWithAnyTags=resource_intensive
    tasks: *query-alias-task-list

  # TODO SERVER-94401: Reenable testing this variant.
  # # Run all-feature-flags along with recordIdsReplicated:true on all collections.
  # - &enterprise-amazon-linux2-arm64-all-feature-flags-recordIdsReplicated
  #   <<: *enterprise-amazon-linux2-arm64-all-feature-flags-template
  #   name: enterprise-amazon-linux2-arm64-all-feature-flags-recordIdsReplicated
  #   display_name: "Amazon Linux 2 arm64 Enterprise (all feature flags) recordIdsReplicated"
  #   tags: []
  #   # Run daily once at 4 AM.
  #   cron: "0 4 * * *"
  #   tasks:
  #     - name: .development_critical !.requires_large_host !.requires_compile_variant !.incompatible_development_variant !.incompatible_all_feature_flags !.multiversion !.serverless !.exclude_when_record_ids_replicated
  #     - name: .development_critical .requires_large_host !.requires_compile_variant !.incompatible_development_variant !.incompatible_all_feature_flags !.multiversion !.serverless !.exclude_when_record_ids_replicated
  #       distros:
  #         - amazon2-arm64-atlas-latest-large
  #     - name: .release_critical !.requires_large_host !.requires_compile_variant !.incompatible_development_variant !.incompatible_all_feature_flags !.multiversion !.serverless !.exclude_when_record_ids_replicated
  #     - name: .release_critical .requires_large_host !.requires_compile_variant !.incompatible_development_variant !.incompatible_all_feature_flags !.multiversion !.serverless !.exclude_when_record_ids_replicated
  #       distros:
  #         - amazon2-arm64-atlas-latest-large
  #     - name: .default !.requires_large_host !.requires_compile_variant !.incompatible_development_variant !.incompatible_all_feature_flags !.multiversion !.serverless !.exclude_when_record_ids_replicated
  #     - name: .default .requires_large_host !.requires_compile_variant !.incompatible_development_variant !.incompatible_all_feature_flags !.multiversion !.serverless !.exclude_when_record_ids_replicated
  #       distros:
  #         - amazon2-arm64-atlas-latest-large
  #   expansions:
  #     <<: *enterprise-amazon-linux2-arm64-all-feature-flags-expansions
  #     # This builder excludes tests tagged with:
  #     # 1) exclude_when_record_ids_replicated: indicates that the test is particular about recordIdsReplicated:false
  #     # 2) disables_test_commands: this builder uses failpoints, and setting disables_test_commands means that the builder can't use failpoints.
  #     # 3) serverless: Retryable writes on the serverless cause problems with recordIdsReplicated:true
  #     test_flags: >-
  #       --runAllFeatureFlagTests
  #       --excludeWithAnyTags=incompatible_with_amazon_linux,requires_external_data_source,exclude_when_record_ids_replicated,disables_test_commands,incompatible_with_atlas_environment,requires_ldap_pool
  #       --mongodSetParameters="{'failpoint.overrideRecordIdsReplicatedDefault': {mode: 'alwaysOn'}, 'failpoint.automaticallyCollmodToRecordIdsReplicatedFalse': {mode: 'alwaysOn'}}"

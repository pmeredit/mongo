command_type: system
stepback: false
exec_timeout_secs: &exec_timeout_secs 36000
timeout_secs: &timeout_secs 7200

include:
  ### lint_yaml trim start ###
  #
  # The lines below are trimmed by yamllinters.sh so that `evergreen evaluate` works on this file.
  # This allows us to test that non-dsi imports continue to work.
  #
  - filename: evergreen/system_perf/master/variants.yml
    module: dsi
  - filename: evergreen/system_perf/master/master_variants.yml
    module: dsi
  - filename: evergreen/system_perf/shared_tasks.yml
    module: dsi
  - filename: evergreen/system_perf/master/genny_tasks.yml
    module: dsi
  ### lint_yaml trim end ###

## Parameters for parameterized builds (see https://github.com/evergreen-ci/evergreen/wiki/Parameterized-Builds)
parameters:
  - key: patch_compile_flags
    description: "Additional SCons flags to be applied during scons compile invocations in this patch"
  # see https://github.com/10gen/performance-tooling-docs/blob/main/patch_testing.md#skipping-compilation-on-sys-perf-projects
  - key: reuse_compile_from
    description: "Version_id of the commit/patch to reuse the compile artifacts from, e.g., sys_perf_ef8504eefef4c9fe2062b8424e85053b3e1ad8d2"
  - key: exec_timeout_secs_override
    value: *exec_timeout_secs
    description: "Overrides the default exec_timeout_secs defined at the top of this file for the f_dsi_run_workload task"
  - key: timeout_secs_override
    value: *timeout_secs
    description: "Overrides the default timeout_secs defined at the top of this file for the f_dsi_run_workload task"

variables:
  _modules: &modules
    - dsi
    - genny
    - workloads
    - linkbench2
    - tsbs
    - mongo-perf
    - YCSB
    - py-tpcc
    - PrivateWorkloads
    - flamegraph

###
# Same in every DSI project. Ensure that this block is synchronized with
# evergreen-dsitest.yml, and src/dsi/onboarding.py (search update-repos-here)
# in the dsi repo, and etc/system_perf.yml in mongodb/mongo.
modules:
  - name: dsi
    owner: 10gen
    repo: dsi
    prefix: ${workdir}/src
    branch: master
  - name: genny
    owner: mongodb
    repo: genny
    prefix: ${workdir}/src
    branch: master
  - name: workloads
    owner: 10gen
    repo: workloads
    prefix: ${workdir}/src
    branch: master
  - name: linkbench2
    owner: 10gen
    repo: linkbench2
    prefix: ${workdir}/src
    branch: master
  - name: tsbs
    owner: mongodb-forks
    repo: tsbs
    prefix: ${workdir}/src
    branch: main
  - name: mongo-perf
    owner: mongodb
    repo: mongo-perf
    prefix: ${workdir}/src
    branch: master
  - name: YCSB
    owner: mongodb-labs
    repo: YCSB
    prefix: ${workdir}/src
    branch: main
  - name: py-tpcc
    owner: mongodb-labs
    repo: py-tpcc
    prefix: ${workdir}/src
    branch: production
  - name: flamegraph
    owner: mongodb-forks
    repo: flamegraph
    prefix: ${workdir}/src
    branch: master
  - name: PrivateWorkloads
    owner: 10gen
    repo: PrivateWorkloads
    prefix: ${workdir}/src
    branch: production
###

###
# Same in every DSI project
pre:
  - func: "f_dsi_pre_run"
post:
  - func: "f_dsi_post_run"
  - func: "f_pgo_post_ops"
timeout:
  - func: "f_dsi_timeout"
###

functions:
  f_pgo_post_ops:
    - command: shell.exec
      params:
        script: |
          cp ./build/Artifacts/DSIArtifacts/WorkloadOutput/reports/ycsb_100read/mongod.0/pre_post_task_output/default.profdata.tgz ./default.profdata.tgz 2>/dev/null || true
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: ./default.profdata.tgz
        remote_file: ${project_dir}/${build_variant}/${revision}/${task_id}/${version_id}/logs/default.profdata.tgz
        bucket: mciuploads
        permissions: public-read
        content_type: application/x-gzip
        display_name: PGO profile data - Execution ${execution}
        optional: true

tasks:
  - name: schedule_compile
    commands:
      - command: expansions.write
        params:
          file: expansions.yml
          redacted: true
      - command: git.get_project
        params:
          directory: src
          clone_depth: 1000
      - command: shell.exec
        params:
          working_dir: src
          script: ./dsi/run-dsi selftest scripts/schedule_compile.py
          include_expansions_in_env:
            - version_id
            - evergreen_api_user
            - evergreen_api_key
            - compile_variant
            - compile_task_name
            - binary_artifact_name
            - reuse_compile_from
            - compile_project
            - schedule_supplementary_data
      - command: s3.put
        params:
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          local_file: src/binary-url.txt
          remote_file: ${project}/${version_id}/binary-urls/${compile_variant}-binary-url.txt
          bucket: mciuploads
          permissions: public-read
          content_type: text/plain
          display_name: binary-url.txt
      - command: s3.put
        params:
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          local_file: src/supplementary-url.txt
          remote_file: ${project}/${version_id}/binary-urls/${compile_variant}-supplementary-url.txt
          bucket: mciuploads
          permissions: public-read
          content_type: text/plain
          display_name: supplementary-url.txt
          optional: true

buildvariants:
  - name: schedule-compile-amazon2-arm64
    display_name: "* Schedule Compile for Amazon Linux 2 arm64"
    expansions:
      compile_variant: amazon2-arm64-compile
      compile_task_name: archive_dist_test
      binary_artifact_name: Binaries
      schedule_supplementary_data: true
      skip_post_run: true
    modules: *modules
    run_on:
      - amazon2-arm64-latest-small
    tasks:
      - name: schedule_compile

  - name: schedule-compile-amazon2023-arm64
    display_name: "* Schedule Compile for Amazon Linux 2023 arm64"
    expansions:
      compile_variant: amazon2023-arm64-compile
      compile_task_name: archive_dist_test
      binary_artifact_name: Binaries
      schedule_supplementary_data: true
      skip_post_run: true
    modules: *modules
    run_on:
      - amazon2023-arm64-latest-small
    tasks:
      - name: schedule_compile

  - name: schedule-compile-amazon2-x86
    display_name: "* Schedule Compile for Amazon Linux 2 x86"
    expansions:
      compile_variant: amazon2-x86-compile
      compile_task_name: archive_dist_test
      binary_artifact_name: Binaries
      schedule_supplementary_data: true
      skip_post_run: true
    modules: *modules
    run_on:
      - amazon2-latest-small
    tasks:
      - name: schedule_compile

  - name: schedule-compile-amazon2-arm64-pgo
    display_name: "* Schedule Compile for Amazon Linux 2 arm64 PGO"
    expansions:
      compile_variant: amazon2-arm64-compile-pgo
      compile_task_name: archive_dist_test
      binary_artifact_name: Binaries
      schedule_supplementary_data: true
      skip_post_run: true
    modules: *modules
    run_on:
      - amazon2-arm64-latest-small
    tasks:
      - name: schedule_compile

  - name: schedule-compile-amazon2-arm64-bolt
    display_name: "* Schedule Compile for Amazon Linux 2 arm64 BOLT"
    expansions:
      compile_variant: amazon2-arm64-compile-bolt
      compile_task_name: archive_dist_test
      binary_artifact_name: Binaries
      schedule_supplementary_data: true
      skip_post_run: true
    modules: *modules
    run_on:
      - amazon2-arm64-latest-small
    tasks:
      - name: schedule_compile

  - name: schedule-compile-amazon2-arm64-mongocrypt-shlib
    display_name: "* Schedule mongo_crypt_v1.so Compile for Amazon Linux 2 arm64"
    expansions:
      compile_variant: amazon2-arm64-mongocrypt-shlib-compile
      compile_task_name: crypt_create_lib
      binary_artifact_name: Mongo crypt Library
      schedule_supplementary_data: false
      skip_post_run: true
    modules: *modules
    run_on:
      - amazon2-arm64-latest-small
    tasks:
      - name: schedule_compile

  - name: schedule-compile-amazon2-x86-streams
    display_name: "* Compile Streams for Amazon Linux 2 x86"
    expansions:
      compile_variant: amazon2-x86-streams-compile
      compile_task_name: archive_dist_test
      binary_artifact_name: Binaries
      schedule_supplementary_data: true
      skip_post_run: true
    modules: *modules
    run_on:
      - amazon2-arm64-latest-small
    tasks:
      - name: schedule_compile

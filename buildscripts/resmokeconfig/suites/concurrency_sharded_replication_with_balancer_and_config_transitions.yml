# Based on the concurrency_sharded_replication_with_balancer suite. This suite
# runs continuous config transitions in the background.
config_variables:
  - &movePrimaryComment continuousConfigShardTransitionMovePrimary

test_kind: fsm_workload_test

selector:
  roots:
    - jstests/concurrency/fsm_workloads/**/*.js
    - src/mongo/db/modules/*/jstests/concurrency/fsm_workloads/*.js
  exclude_files:
    # SERVER-14669 Multi-removes that use $where miscount removed documents
    - jstests/concurrency/fsm_workloads/query/remove/remove_where.js

    # Disabled due to MongoDB restrictions and/or workload restrictions

    # These workloads sometimes trigger 'Could not lock auth data update lock'
    # errors because the AuthorizationManager currently waits for only five
    # seconds to acquire the lock for authorization documents
    - jstests/concurrency/fsm_workloads/auth_create_role.js
    - jstests/concurrency/fsm_workloads/auth_create_user.js
    - jstests/concurrency/fsm_workloads/auth_drop_role.js
    - jstests/concurrency/fsm_workloads/auth_drop_user.js

    # uses >100MB of data, which can overwhelm test hosts
    - jstests/concurrency/fsm_workloads/query/agg/agg_group_external.js
    - jstests/concurrency/fsm_workloads/query/agg/agg_sort_external.js

    # compact can only be run against a standalone mongod
    - jstests/concurrency/fsm_workloads/compact.js
    - jstests/concurrency/fsm_workloads/compact_while_creating_indexes.js

    # test creates too many collections for ContinuousAddRemoveShard
    - jstests/concurrency/fsm_workloads/create_collection.js

    # can cause OOM kills on test hosts
    - jstests/concurrency/fsm_workloads/query/findAndModify/findAndModify_update_grow.js

    # cannot createIndex after dropDatabase without sharding first
    - jstests/concurrency/fsm_workloads/query/plan_cache_drop_database.js

    # reIndex is not supported in mongos.
    - jstests/concurrency/fsm_workloads/reindex.js
    - jstests/concurrency/fsm_workloads/reindex_background.js
    - jstests/concurrency/fsm_workloads/reindex_writeconflict.js

    # The WTWriteConflictException failpoint is not supported on mongos.
    - jstests/concurrency/fsm_workloads/collmod_writeconflict.js

    # SERVER-20361 Improve the behaviour of multi-update/delete against a sharded collection
    - jstests/concurrency/fsm_workloads/query/update/update_where.js

    # TODO Undenylist (SERVER-38852).
    - jstests/concurrency/fsm_workloads/query/agg/agg_out_interrupt_cleanup.js
    - jstests/concurrency/fsm_workloads/query/timeseries/timeseries_agg_out_interrupt_cleanup.js

    # serverStatus does not include transaction metrics on mongos.
    - jstests/concurrency/fsm_workloads/multi_statement_transaction_atomicity_isolation_metrics_test.js

    # Uses the same transaction id across different routers, which is not allowed because when either
    # router tries to commit, it may not know the full participant list.
    - jstests/concurrency/fsm_workloads/multi_statement_transaction_all_commands_same_session.js

    # The test may spuriously fail when run against sharded clusters, due to limitations of the
    # infrastructure. See SERVER-77039 for full details.
    - jstests/concurrency/fsm_workloads/query/map_reduce/map_reduce_drop.js

    # This test runs a large number of inserts, which can cause moveCollection to take a long time
    # to finish. This can cause the CheckMetadataConsistency hook to hit LockBusy errors.
    - jstests/concurrency/fsm_workloads/timeseries_insert_idle_bucket_expiration.js

    # Exclude tests that run cleanupOrphaned, which can fail running on a config shard if a
    # concurrent migration fails due to the config shard transitioning to dedicated.
    - jstests/concurrency/fsm_workloads/cleanupOrphanedWhileMigrating.js

  exclude_with_any_tags:
    - assumes_against_mongod_not_mongos
    - assumes_balancer_off
    - requires_replication
    # mongos has no system.profile collection.
    - requires_profiling
    - assumes_unsharded_collection

    # The following tags are excluded specifically for this suite.
    - config_shard_incompatible
    - assumes_stable_shard_list

    # This suite executes random moveCollections in the background that cause open cursors on the
    # collection to be killed.
    - requires_getmore

executor:
  archive:
    hooks:
      - CheckReplDBHashInBackground
      - CheckReplDBHash
      - CheckMetadataConsistencyInBackground
      - ValidateCollections
    tests: true
  config:
    shell_options:
      eval: >-
        await import("jstests/libs/override_methods/implicitly_retry_on_shard_transition_errors.js");
      global_vars:
        TestData:
          runningWithBalancer: true
          shardsAddedRemoved: true
          shardCollectionProbability: 0.5
          fsmPreOverridesLoadedCallback: import("jstests/libs/override_methods/implicitly_retry_on_migration_in_progress.js");
  hooks:
    - class: ContinuousAddRemoveShard
      transition_configsvr: true
      move_primary_comment: *movePrimaryComment
    - class: CheckShardFilteringMetadata
    - class: CheckReplDBHashInBackground
    - class: CheckReplDBHash
    - class: CheckMetadataConsistencyInBackground
      shell_options:
        global_vars:
          TestData:
            shardsAddedRemoved: true
    - class: CheckOrphansDeleted
    - class: CheckRoutingTableConsistency
    - class: ValidateCollections # Validation can interfere with other operations, so this goes last.
    - class: CleanupConcurrencyWorkloads
  fixture:
    class: ShardedClusterFixture
    config_shard: "any"
    mongos_options:
      set_parameters:
        enableTestCommands: 1
        queryAnalysisSamplerConfigurationRefreshSecs: 1
        defaultConfigCommandTimeoutMS: 90000
    shard_options:
      mongod_options:
        oplogSize: 1024
    mongod_options:
      set_parameters:
        enableTestCommands: 1
        roleGraphInvalidationIsFatal: 1
        queryAnalysisWriterIntervalSecs: 1
        queryAnalysisSamplerConfigurationRefreshSecs: 1
        defaultConfigCommandTimeoutMS: 90000
        skipDroppingHashedShardKeyIndex: true
        reshardingMinimumOperationDurationMillis: 0
        balancerMigrationsThrottlingMs: 250
        featureFlagReshardingForTimeseries: true
        failpoint.movePrimaryFailIfNeedToCloneMovableCollections:
          data:
            comment: *movePrimaryComment
          mode: alwaysOn
    num_rs_nodes_per_shard: 3
    # Use 3 shards so there's always at least two for workloads with manual migrations, etc.
    num_shards: 3
    num_mongos: 2
    enable_balancer: true
    random_migrations: true

{
  "Address": {
    "source": {
      "db": "ecommerce_db",
      "collection": "customers",
      "targetPath": "addresses",
      "projection": [
         "street_address",
         "city",
         "state",
         "postal_code",
         "country",
         "address_constraintType",
         "is_default"
      ]
    },
    "primaryKey": "_id",
    "description": "Defines the canonical structure of a single address object. This schema is primarily used for embedding within Customer and Order collections. This 'collection' serves as a schema definition point.",
    "relationships": [
      {
        "foreignEntity": "Customer",
        "relationshipType": "many-to-one",
        "description": "Original source relationship indicating an address might be linked to a customer. In the MongoDB model, addresses are typically embedded within customers.",
        "constraint": {
          "constraintType": "foreign",
          "db": "ecommerce_db",
          "collection": "customers",
          "direction": "parent",
          "localKey": "customer_id",
          "foreignKey": "customer_id",
          "projection": ["customer_id", "email"]
        },
        "consistency": "eventual"
      }
    ],
    "jsonSchema": {
      "bsonType": "object",
      "required": [
        "street_address",
        "city",
        "state",
        "postal_code",
        "country",
        "address_constraintType"
      ],
      "properties": {
        "_id": {
          "bsonType": "objectId",
          "description": "MongoDB unique identifier if an address instance were stored independently."
        },
        "address_id": {
          "bsonType": "int",
          "description": "Original unique identifier for the address instance from the source system."
        },
        "customer_id": {
          "bsonType": "int",
          "description": "Original customer identifier (foreign key) from the source system's addresses table."
        },
        "street_address": { "bsonType": "string" },
        "city": { "bsonType": "string" },
        "state": { "bsonType": "string" },
        "postal_code": { "bsonType": "string" },
        "country": { "bsonType": "string" },
        "address_constraintType": {
          "bsonType": "string",
          "description": "Type of address (e.g., Home, Work)."
        },
        "is_default": { "bsonType": "bool" }
      }
    }
  },
  "OrderItem": {
    "primaryKey": "_id",
    "description": "Defines the canonical structure of a single order item. This schema is primarily used for embedding within the Order collection. This 'collection' serves as a schema definition point.",
    "source": {
      "db": "ecommerce_db",
      "collection": "orders",
      "targetPath": "order_items",
      "projection": [
        "product_ref_id",
        "product_name_snapshot",
        "quantity",
        "price_at_purchase",
        "original_product_id"
      ]
    },
    "relationships": [],
    "jsonSchema": {
      "bsonType": "object",
      "required": [
        "product_ref_id",
        "product_id",
        "quantity",
        "price_at_purchase",
        "product_name_snapshot"
      ],
      "properties": {
        "_id": {
          "bsonType": "objectId",
          "description": "MongoDB unique identifier if an order item instance were stored independently."
        },
        "order_item_id": {
          "bsonType": "int",
          "description": "Original unique identifier for the order item from the source system."
        },
        "product_ref_id": {
          "bsonType": "objectId",
          "description": "Reference to the Product collection's _id."
        },
        "product_id": {
          "bsonType": "int",
          "description": "Original product identifier (foreign key) from the source system."
        },
        "product_name_snapshot": {
          "bsonType": "string",
          "description": "Snapshot of product name at time of order."
        },
        "quantity": { "bsonType": "int" },
        "price_at_purchase": {
          "bsonType": "decimal",
          "description": "Snapshot of price at time of order."
        }
      }
    }
  },
  "Customer": {
    "primaryKey": "_id",
    "source": {
        "db": "ecommerce_db",
        "collection": "customers"
    },
    "collection": "customers",
    "description": "Stores customer information and their embedded addresses.",
    "relationships": [
      {
        "foreignEntity": "Address",
        "relationshipType": "many-to-one",
        "description": "Customers have multiple addresses, embedded within the customer document.",
        "constraint": {
          "constraintType": "embedded",
          "direction": "child",
          "targetPath": "addresses",
          "projection": [
            "street_address",
            "city",
            "state",
            "postal_code",
            "country",
            "address_constraintType",
            "is_default"
          ]
        },
        "consistency": "strong"
      },
      {
        "foreignEntity": "Order",
        "relationshipType": "many-to-one",
        "description": "Links customers to their orders. Orders reference customers.",
        "constraint": {
          "constraintType": "embedded",
          "targetPath": "orders",
          "db": "ecommerce_db",
          "collection": "orders",
          "direction": "parent",
          "localKey": "_id",
          "foreignKey": "customer_ref_id",
          "projection": [
            "original_order_id",
            "order_date",
            "total_amount",
            "status"
          ]
        },
        "consistency": "eventual"
      }
    ],
    "jsonSchema": {
      "bsonType": "object",
      "required": [
        "_id",
        "first_name",
        "last_name",
        "email",
        "registration_date"
      ],
      "properties": {
        "_id": { "bsonType": "objectId" },
        "original_customer_id": {
          "bsonType": "int",
          "description": "Original unique identifier for the customer from the source system."
        },
        "first_name": { "bsonType": "string" },
        "last_name": { "bsonType": "string" },
        "email": {
          "bsonType": "string",
          "description": "Primary email, unique identifier. Originally a PK in source."
        },
        "phone_number": {
          "bsonType": "string",
          "description": "Optional phone number."
        },
        "registration_date": { "bsonType": "date" },
        "addresses": {
          "bsonType": "array",
          "description": "Array of customer's addresses, embedded.",
          "items": {
            "bsonType": "object",
            "schemaDerivedFrom": "Address",
            "description": "An embedded address structure."
          }
        }
      },
      "indexes": [
        { "keys": { "email": 1 }, "options": { "unique": true } },
        {
          "keys": { "original_customer_id": 1 },
          "options": { "unique": true, "sparse": true }
        }
      ]
    }
  },
  "Category": {
    "source": {
      "db": "ecommerce_db",
      "collection": "categories"
    },
    "primaryKey": "_id",
    "description": "Stores product categories.",
    "relationships": [
      {
        "foreignEntity": "Product",
        "relationshipType": "many-to-one",
        "description": "Links categories to their products. Products reference categories.",
        "constraint": {
          "constraintType": "foreign",
          "db": "ecommerce_db",
          "collection": "products",
          "direction": "parent",
          "localKey": "_id",
          "foreignKey": "category_ref_id",
          "projection": ["original_product_id", "product_name", "price"]
        },
        "consistency": "eventual"
      }
    ],
    "jsonSchema": {
      "bsonType": "object",
      "required": ["_id", "category_name"],
      "properties": {
        "_id": { "bsonType": "objectId" },
        "original_category_id": {
          "bsonType": "int",
          "description": "Original unique identifier for the category from the source system."
        },
        "category_name": {
          "bsonType": "string",
          "description": "Name of the category. Originally a PK in source."
        },
        "description": { "bsonType": "string" }
      },
      "indexes": [
        { "keys": { "category_name": 1 }, "options": { "unique": true } },
        {
          "keys": { "original_category_id": 1 },
          "options": { "unique": true, "sparse": true }
        }
      ]
    }
  },
  "Product": {
    "source": {
      "db": "ecommerce_db",
      "collection": "products"
    },
    "primaryKey": "_id",
    "description": "Stores product information.",
    "relationships": [
      {
        "foreignEntity": "Category",
        "relationshipType": "many-to-one",
        "description": "Products belong to a category. This product references a category.",
        "constraint": {
          "constraintType": "foreign",
          "db": "ecommerce_db",
          "collection": "categories",
          "direction": "child",
          "localKey": "category_ref_id",
          "foreignKey": "_id",
          "projection": ["original_category_id", "category_name"]
        },
        "consistency": "eventual"
      }
    ],
    "jsonSchema": {
      "bsonType": "object",
      "required": [
        "_id",
        "product_name",
        "price",
        "stock_quantity",
        "category_ref_id"
      ],
      "properties": {
        "_id": { "bsonType": "objectId" },
        "original_product_id": {
          "bsonType": "int",
          "description": "Original unique identifier for the product from the source system."
        },
        "product_name": { "bsonType": "string" },
        "description": { "bsonType": "string" },
        "price": { "bsonType": "decimal" },
        "stock_quantity": { "bsonType": "int" },
        "category_ref_id": {
          "bsonType": "objectId",
          "description": "Reference to the Category collection's _id."
        },
        "original_category_id": {
          "bsonType": "int",
          "description": "Original category identifier (foreign key) from the source system."
        },
        "created_at": { "bsonType": "date" }
      },
      "indexes": [
        {
          "keys": { "original_product_id": 1 },
          "options": { "unique": true, "sparse": true }
        },
        { "keys": { "category_ref_id": 1 } }
      ]
    }
  },
  "Order": {
    "source": {
      "db": "ecommerce_db",
      "collection": "orders"
    },
    "primaryKey": "_id",
    "description": "Stores order information, embedding order items, shipping and billing addresses (as snapshots). References customer.",
    "relationships": [
      {
        "foreignEntity": "Customer",
        "relationshipType": "many-to-one",
        "description": "Order belongs to a customer. This order references a customer.",
        "constraint": {
          "constraintType": "foreign",
          "db": "ecommerce_db",
          "collection": "customers",
          "direction": "child",
          "localKey": "customer_ref_id",
          "foreignKey": "_id",
          "projection": [
            "original_customer_id",
            "email",
            "first_name",
            "last_name"
          ]
        },
        "consistency": "eventual"
      },
      {
        "foreignEntity": "Address",
        "relationshipType": "one-to-one",
        "description": "Order has a shipping address, embedded as a snapshot using the canonical Address structure.",
        "constraint": {
          "constraintType": "embedded",
          "direction": "child",
          "targetPath": "shipping_address",
          "projection": [
            "street_address",
            "city",
            "state",
            "postal_code",
            "country"
          ]
        },
        "consistency": "strong"
      },
      {
        "foreignEntity": "Address",
        "relationshipType": "one-to-one",
        "description": "Order has a billing address, embedded as a snapshot using the canonical Address structure.",
        "constraint": {
          "constraintType": "embedded",
          "direction": "child",
          "targetPath": "billing_address",
          "projection": [
            "street_address",
            "city",
            "state",
            "postal_code",
            "country"
          ]
        },
        "consistency": "strong"
      },
      {
        "foreignEntity": "OrderItem",
        "relationshipType": "many-to-one",
        "description": "Order contains multiple order items, embedded within the order document using the canonical OrderItem structure.",
        "constraint": {
          "constraintType": "embedded",
          "direction": "child",
          "targetPath": "order_items",
          "projection": [
            "product_ref_id",
            "product_name_snapshot",
            "quantity",
            "price_at_purchase",
            "original_product_id"
          ]
        },
        "consistency": "strong"
      }
    ],
    "jsonSchema": {
      "bsonType": "object",
      "required": [
        "_id",
        "customer_ref_id",
        "order_date",
        "status",
        "total_amount",
        "shipping_address",
        "billing_address",
        "order_items"
      ],
      "properties": {
        "_id": { "bsonType": "objectId" },
        "original_order_id": {
          "bsonType": "int",
          "description": "Original unique identifier for the order from the source system."
        },
        "customer_ref_id": {
          "bsonType": "objectId",
          "description": "Reference to the Customer collection's _id."
        },
        "original_customer_id": {
          "bsonType": "int",
          "description": "Original customer identifier (foreign key) from the source system."
        },
        "order_date": { "bsonType": "date" },
        "status": { "bsonType": "string" },
        "total_amount": { "bsonType": "decimal" },
        "original_shipping_address_id": {
          "bsonType": "int",
          "description": "Original shipping address identifier (foreign key) from the source system."
        },
        "shipping_address": {
          "bsonType": "object",
          "schemaDerivedFrom": "Address",
          "description": "Embedded snapshot of the shipping address."
        },
        "original_billing_address_id": {
          "bsonType": "int",
          "description": "Original billing address identifier (foreign key) from the source system."
        },
        "billing_address": {
          "bsonType": "object",
          "schemaDerivedFrom": "Address",
          "description": "Embedded snapshot of the billing address."
        },
        "order_items": {
          "bsonType": "array",
          "description": "Array of items in the order, embedded.",
          "items": {
            "bsonType": "object",
            "schemaDerivedFrom": "OrderItem",
            "description": "An embedded order item structure."
          }
        }
      },
      "indexes": [
        {
          "keys": { "original_order_id": 1 },
          "options": { "unique": true, "sparse": true }
        },
        { "keys": { "customer_ref_id": 1 } },
        { "keys": { "order_date": -1 } }
      ]
    }
  }
}

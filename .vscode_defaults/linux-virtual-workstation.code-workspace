{
	"folders": [
		{
			"path": ".."
		}
	],
	"settings": {
		"clangd.arguments": [
			"--query-driver=/opt/mongodbtoolchain/v4/bin/*",
			"--header-insertion=never",
		],
		"clangd.checkUpdates": true,
		"clang-format.executable": "/opt/mongodbtoolchain/v4/bin/clang-format",
		"clang-tidy.executable": "buildscripts/clang_tidy_vscode.py",
		"editor.codeActionsOnSave": {
			"source.fixAll.eslint": "explicit"
		},
		"eslint.validate": [
			"javascript"
		],
		"files.associations": {
			"SConstruct": "python",
			"SConscript": "python",
			"*.idl": "yaml",
		},
		"files.insertFinalNewline": true,
		"js/ts.implicitProjectConfig.target": "ES2020",
		"pylint.path": [
			"${interpreter}",
			"-m",
			"pylint"
		],
		"python.autoComplete.extraPaths": [
			"/opt/mongodbtoolchain/v4/share/gcc-11.3.0/python",
			"src/third_party/scons-3.1.2/scons-local-3.1.2"
		],
		"python.defaultInterpreterPath": "python3-venv/bin/python",
		"python.analysis.extraPaths": [
			"/opt/mongodbtoolchain/v4/share/gcc-11.3.0/python",
			"src/third_party/scons-3.1.2/scons-local-3.1.2"
		],
		"mypy-type-checker.path": [
			"${interpreter}",
			"-m",
			"mypy"
		],
		"mypy-type-checker.importStrategy": "fromEnvironment",
		"editor.defaultFormatter": "esbenp.prettier-vscode",
		"[c]": {
			"editor.defaultFormatter": "xaver.clang-format",
			"editor.formatOnSave": true,
		},
		"[cpp]": {
			"editor.defaultFormatter": "xaver.clang-format",
			"editor.formatOnSave": true,
		},
		"[javascript]": {
			"editor.defaultFormatter": "xaver.clang-format",
			"editor.formatOnSave": true,
		},
		"[python]": {
			"editor.formatOnSaveMode": "file",
			"editor.formatOnSave": true,
			"editor.defaultFormatter": "charliermarsh.ruff",
		},
		"[starlark]": {
			"editor.defaultFormatter": "BazelBuild.vscode-bazel"
		},
		// Allows clicking on a line to jump to location in a JS stacktrace like the example
		// following. Usually the '@' character is not recognized as a word boundary.
		// doassert@src/mongo/shell/assert.js:18:14
		"terminal.integrated.wordSeparators": " ()[]{}',\"`─‘’@",
		"yaml.schemas": {
			"./buildscripts/idl/idl_schema.yml": [
				"*.idl"
			],
		},
		"C_Cpp.intelliSenseEngine": "disabled",
	},
	"extensions": {
		"recommendations": [
			"llvm-vs-code-extensions.vscode-clangd",
			"dbaeumer.vscode-eslint",
			"ms-python.python",
			"xaver.clang-format",
			"cs128.cs128-clang-tidy",
			"charliermarsh.ruff",
			"ms-python.pylint",
			"ms-python.mypy-type-checker",
			"esbenp.prettier-vscode",
			"redhat.vscode-yaml",
			"streetsidesoftware.code-spell-checker",
			"jasonnutter.vscode-codeowners",
			"bazelbuild.vscode-bazel",
			"rioj7.command-variable",
			"augustocdias.tasks-shell-input",
			"ms-vscode.cpptools"
		]
	},
	"launch": {
		"version": "0.2.0",
		"configurations": [
			{
				"name": "launch",
				"type": "cppdbg",
				"request": "launch",
				"program": "${workspaceFolder}/${input:runTargets}",
				"args": [],
				"stopAtEntry": false,
				"cwd": "${workspaceFolder}",
				"environment": [],
				"externalConsole": false,
				"MIMode": "gdb",
				"setupCommands": [
					{
						"text": "set verbose",
						"ignoreFailures": false
					},
					{
						"text": "set directories ${workspaceFolder}",
						"ignoreFailures": false
					},
					{
						"text": "set debug-file-directory ${workspaceFolder}",
						"ignoreFailures": false
					},
					{
						"description": "Enable pretty-printing for gdb",
						"text": "-enable-pretty-printing",
						"ignoreFailures": false
					},
					{
						"text": "source ${workspaceFolder}/buildscripts/gdb/mongo.py",
						"ignoreFailures": false
					},
					{
						"text": "source ${workspaceFolder}/buildscripts/gdb/optimizer_printers.py",
						"ignoreFailures": false
					},
					{
						"text": "source ${workspaceFolder}/buildscripts/gdb/mongo_printers.py",
						"ignoreFailures": false
					},
					{
						"text": "source ${workspaceFolder}/buildscripts/gdb/mongo_lock.py",
						"ignoreFailures": false
					},
					{
						"text": "source ${workspaceFolder}/buildscripts/gdb/wt_dump_table.py",
						"ignoreFailures": false
					},
					{
						"text": "source ${workspaceFolder}/src/third_party/immer/dist/tools/gdb_pretty_printers/autoload.py",
						"ignoreFailures": false
					},
				],
				"miDebuggerPath": "/opt/mongodbtoolchain/v4/bin/gdb",
			},
			{
				"name": "attach",
				"type": "cppdbg",
				"request": "attach",
				"program": "${workspaceFolder}/${input:runTargets}",
				"processId": "${command:pickProcess}",
				"MIMode": "gdb",
				"setupCommands": [
					{
						"text": "set verbose",
						"ignoreFailures": false
					},
					{
						"text": "set directories ${workspaceFolder}",
						"ignoreFailures": false
					},
					{
						"text": "set debug-file-directory ${workspaceFolder}",
						"ignoreFailures": false
					},
					{
						"description": "Enable pretty-printing for gdb",
						"text": "-enable-pretty-printing",
						"ignoreFailures": false
					},
					{
						"text": "source ${workspaceFolder}/buildscripts/gdb/mongo.py",
						"ignoreFailures": false
					},
					{
						"text": "source ${workspaceFolder}/buildscripts/gdb/optimizer_printers.py",
						"ignoreFailures": false
					},
					{
						"text": "source ${workspaceFolder}/buildscripts/gdb/mongo_printers.py",
						"ignoreFailures": false
					},
					{
						"text": "source ${workspaceFolder}/buildscripts/gdb/mongo_lock.py",
						"ignoreFailures": false
					},
					{
						"text": "source ${workspaceFolder}/buildscripts/gdb/wt_dump_table.py",
						"ignoreFailures": false
					},
					{
						"text": "source ${workspaceFolder}/src/third_party/immer/dist/tools/gdb_pretty_printers/autoload.py",
						"ignoreFailures": false
					},
				],
				"miDebuggerPath": "/opt/mongodbtoolchain/v4/bin/gdb",
			},
			{
				"name": "coredump",
				"type": "cppdbg",
				"request": "launch",
				"cwd": "${workspaceFolder}",
				"program": "${workspaceFolder}/${input:runTargets}",
				"args": [],
				"MIMode": "gdb",
				"miDebuggerPath": "/opt/mongodbtoolchain/v4/bin/gdb",
				"setupCommands": [
					{
						"text": "set verbose",
						"ignoreFailures": false
					},
					{
						"text": "set directories ${workspaceFolder}",
						"ignoreFailures": false
					},
					{
						"text": "set debug-file-directory ${workspaceFolder}",
						"ignoreFailures": false
					},
					{
						"description": "Enable pretty-printing for gdb",
						"text": "-enable-pretty-printing",
						"ignoreFailures": false
					},
					{
						"text": "source ${workspaceFolder}/buildscripts/gdb/mongo.py",
						"ignoreFailures": false
					},
					{
						"text": "source ${workspaceFolder}/buildscripts/gdb/optimizer_printers.py",
						"ignoreFailures": false
					},
					{
						"text": "source ${workspaceFolder}/buildscripts/gdb/mongo_printers.py",
						"ignoreFailures": false
					},
					{
						"text": "source ${workspaceFolder}/buildscripts/gdb/mongo_lock.py",
						"ignoreFailures": false
					},
					{
						"text": "source ${workspaceFolder}/buildscripts/gdb/wt_dump_table.py",
						"ignoreFailures": false
					},
					{
						"text": "source ${workspaceFolder}/src/third_party/immer/dist/tools/gdb_pretty_printers/autoload.py",
						"ignoreFailures": false
					},
				],
				"coreDumpPath": "${input:pickDumpFile}"
			}
		],
		"inputs": [
			{
				"id": "pickDumpFile",
				"type": "command",
				"command": "extension.commandvariable.file.pickFile",
				"args": {
					"description": "Pick a core dump file",
					"include": "*.core",
					"cwd": "${workspaceFolder}"
				}
			},
			{
				"type": "command",
				"id": "runTargets",
				"command": "shellCommand.execute",
				"args": {
					"command": "bazel query 'attr(tags, \"mongo_binary\", //...)' union 'attr(tags, \"mongo_unittest\", //...)' | grep mongo | grep -v \"_with_debug\" | grep -v third_party | sed 's;//;bazel-bin/;g' | sed 's;:;/;g'",
					"cwd": "${workspaceFolder}",
				}
			},
		]
	}
}

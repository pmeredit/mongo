# -*- mode: python -*-

Import("env")

env = env.Clone()

env.Library(
    target="thread_pool_test_fixture",
    source=["thread_pool_test_common.cpp", "thread_pool_test_fixture.cpp"],
    LIBDEPS_PRIVATE=[
        "$BUILD_DIR/mongo/unittest/unittest",
    ],
)

env.CppUnitTest(
    target="util_concurrency_test",
    source=[
        "priority_ticketholder_test.cpp" if env.TargetOSIs("linux") else [],
        "semaphore_ticketholder_test.cpp",
        "spin_lock_test.cpp",
        "thread_pool_test.cpp",
        "ticketholder_test_fixture.cpp",
        "ticket_pool_test.cpp" if env.TargetOSIs("linux") else [],
        "with_lock_test.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/db/auth/authmocks",
        "$BUILD_DIR/mongo/db/service_context_non_d",
        "$BUILD_DIR/mongo/db/service_context_test_fixture",
        "spin_lock",
        "thread_pool",
        "thread_pool_test_fixture",
        "ticketholder",
    ],
)

env.Benchmark(
    target="ticketholder_bm",
    source=[
        "ticketholder_bm.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/db/admission/execution_admission_context",
        "$BUILD_DIR/mongo/db/concurrency/lock_manager",
        "$BUILD_DIR/mongo/db/service_context_non_d",
        "ticketholder",
    ],
    CONSOLIDATED_TARGET="second_half_bm",
)

env.Benchmark(
    target="lock_free_read_list_bm",
    source=[
        "lock_free_read_list_bm.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/util/processinfo",
    ],
)

env.CppUnitTest(
    target="lock_free_read_list_test",
    source=[
        "lock_free_read_list_test.cpp",
    ],
    LIBDEPS=[],
)

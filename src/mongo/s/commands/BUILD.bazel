load("//bazel:mongo_src_rules.bzl", "idl_generator", "mongo_cc_library")

package(default_visibility = ["//visibility:public"])

exports_files(
    glob([
        "*.h",
        "*.cpp",
    ]),
)

idl_generator(
    name = "cluster_commands_gen",
    src = "cluster_commands.idl",
    deps = [
        "//src/mongo/db:basic_types_gen",
        "//src/mongo/idl:generic_argument_gen",
        "//src/mongo/s:sharding_types_gen",
    ],
)

idl_generator(
    name = "cluster_fsync_unlock_cmd_gen",
    src = "cluster_fsync_unlock_cmd.idl",
    deps = [
        "//src/mongo/db:basic_types_gen",
        "//src/mongo/idl:generic_argument_gen",
    ],
)

idl_generator(
    name = "refine_collection_shard_key_gen",
    src = "refine_collection_shard_key.idl",
    deps = [
        "//src/mongo/db:basic_types_gen",
        "//src/mongo/idl:generic_argument_gen",
    ],
)

idl_generator(
    name = "shard_collection_gen",
    src = "shard_collection.idl",
    deps = [
        "//src/mongo/db:basic_types_gen",
        "//src/mongo/db/timeseries:timeseries_gen",
        "//src/mongo/idl:generic_argument_gen",
        "//src/mongo/s:sharding_types_gen",
    ],
)

# These commands are registered with both the router and shard command
# registries.
mongo_cc_library(
    name = "sharded_cluster_sharding_commands",
    srcs = [
        "flush_router_config_cmd.cpp",
        "get_shard_map_cmd.cpp",
        "sharding_expressions.cpp",
    ],
    hdrs = [
        "sharding_expressions.h",
    ],
    deps = [
        "//src/mongo/db:commands",
        "//src/mongo/db:shard_role_api",
        "//src/mongo/db/catalog:index_key_validate",
        "//src/mongo/db/fts:base_fts",
        "//src/mongo/db/index:expression_params",
        "//src/mongo/db/index:index_access_method",
        "//src/mongo/s:grid",
    ],
)

mongo_cc_library(
    name = "cluster_commands_common",
    srcs = [
        "document_shard_key_update_util.cpp",
        "strategy.cpp",
        "//src/mongo/s/commands/query_cmd:cluster_explain.cpp",
        "//src/mongo/s/commands/query_cmd:cluster_write_cmd.cpp",
    ],
    hdrs = [
        "document_shard_key_update_util.h",
        "strategy.h",
        "//src/mongo/s/commands/query_cmd:cluster_explain.h",
        "//src/mongo/s/commands/query_cmd:cluster_write_cmd.h",
    ],
    deps = [
        "//src/mongo/db:default_max_time_ms_cluster_parameter",
        "//src/mongo/db:fle_crud",
        "//src/mongo/db:internal_transactions_feature_flag",
        "//src/mongo/db:operation_time_tracker",
        "//src/mongo/db:read_write_concern_defaults",
        "//src/mongo/db:shared_request_handling",
        "//src/mongo/db:validate_api_parameters",
        "//src/mongo/db/commands:core",
        "//src/mongo/db/repl:repl_server_parameters",
        "//src/mongo/db/stats:api_version_metrics",
        "//src/mongo/db/stats:counters",
        "//src/mongo/db/transaction:transaction_api",
        "//src/mongo/executor:inline_executor",
        "//src/mongo/rpc:metadata",
        "//src/mongo/rpc:rewrite_state_change_errors",
        "//src/mongo/s:load_balancer_support",
        "//src/mongo/s:mongos_topology_coordinator",
        "//src/mongo/s:sharding_api",
        "//src/mongo/s/query/planner:cluster_aggregate",
        "//src/mongo/transport:message_compressor",
        "//src/mongo/transport:service_executor",
        "//src/mongo/transport:transport_layer_common",
    ],
)

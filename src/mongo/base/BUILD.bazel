load("//bazel:mongo_src_rules.bzl", "mongo_cc_binary", "mongo_cc_library")
load("//bazel/config:render_template.bzl", "render_template")
load("@poetry//:dependencies.bzl", "dependency")

package(default_visibility = ["//visibility:public"])

exports_files(
    glob(["*.h"]) + glob(["*.cpp"]),
)

render_template(
    name = "error_codes_source",
    srcs = [
        "error_codes.tpl.cpp",
        "error_codes.yml",
        "generate_error_codes.py",
    ],
    cmd = [
        "$(location generate_error_codes.py)",
        "$(location error_codes.yml)",
        "$(location error_codes.tpl.cpp)",
        "$(location error_codes.cpp)",
    ],
    output = "error_codes.cpp",
    python_libs = [
        dependency(
            "cheetah3",
            group = "compile",
        ),
        dependency(
            "pyyaml",
            group = "core",
        ),
    ],
)

render_template(
    name = "error_codes_header",
    srcs = [
        "error_codes.tpl.h",
        "error_codes.yml",
        "generate_error_codes.py",
    ],
    cmd = [
        "$(location generate_error_codes.py)",
        "$(location error_codes.yml)",
        "$(location error_codes.tpl.h)",
        "$(location error_codes.h)",
    ],
    output = "error_codes.h",
    python_libs = [
        dependency(
            "cheetah3",
            group = "compile",
        ),
        dependency(
            "pyyaml",
            group = "core",
        ),
    ],
)

mongo_cc_library(
    name = "environment_buffer",
    srcs = [
        "environment_buffer.cpp",
    ],
    hdrs = [
        "environment_buffer.h",
    ],
)

mongo_cc_library(
    name = "system_error",
    srcs = [
        "system_error.cpp",
    ],
    hdrs = [
        "system_error.h",
    ],
    deps = [
        "//src/mongo:base",
    ],
)

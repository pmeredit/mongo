# -*- mode: python; -*-

Import("env")

env = env.Clone()

env.SConscript(
    must_exist=1,
    dirs=[
        "column",
        "mutable",
        "util",
    ],
    exports=[
        "env",
    ],
)

env.CppUnitTest(
    target="bson_test",
    source=[
        "bson_field_test.cpp",
        "bson_iterator_test.cpp",
        "bson_obj_data_type_test.cpp",
        "bson_obj_test.cpp",
        "bson_validate_test.cpp",
        "bsonelement_test.cpp",
        "bsonobjbuilder_test.cpp",
        "oid_test.cpp",
        "simple_bsonobj_comparator_test.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/base",
        "$BUILD_DIR/mongo/bson/bson_validate",
        "$BUILD_DIR/mongo/bson/column/column",
    ],
)

env.Benchmark(
    target="bson_bm",
    source=[
        "bson_bm.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/base",
        "$BUILD_DIR/mongo/bson/bson_validate",
    ],
    CONSOLIDATED_TARGET="first_half_bm",
)

env.CppLibfuzzerTest(
    target="bson_validate_fuzzer",
    source=[
        "bson_validate_fuzzer.cpp",
        "bson_validate_old.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/base",
        "$BUILD_DIR/mongo/bson/bson_validate",
    ],
)

asioEnv = env.Clone()
asioEnv.InjectThirdParty("asio")

asioEnv.CppIntegrationTest(
    target="bson_integration_test",
    source=[
        "ugly_bson_integration_test.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/executor/network_interface",
        "$BUILD_DIR/mongo/executor/network_interface_fixture",
        "$BUILD_DIR/mongo/rpc/message",
        "$BUILD_DIR/mongo/transport/transport_layer_egress_init",
    ],
)

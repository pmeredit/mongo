load("//bazel:mongo_src_rules.bzl", "idl_generator", "mongo_cc_library")

package(default_visibility = ["//visibility:public"])

exports_files(
    glob([
        "*.h",
        "*.cpp",
    ]),
)

mongo_cc_library(
    name = "sort_executor",
    srcs = [
        "sort_executor.cpp",
        "sort_key_comparator.cpp",
    ],
    hdrs = [
        "sort_executor.h",
        "sort_key_comparator.h",
    ],
    deps = [
        ":working_set",
        "//src/mongo/db/query:sort_pattern",  # TODO(SERVER-93876): Remove.
        "//src/mongo/db/query:spill_util",
        "//src/mongo/db/sorter:sorter_base",
        "//src/mongo/db/sorter:sorter_stats",  # TODO(SERVER-93876): Remove.
        "//src/mongo/db/storage:encryption_hooks",
        "//src/mongo/db/storage:storage_options",  # TODO(SERVER-93876): Remove.
        "//src/third_party/snappy",
    ],
)

mongo_cc_library(
    name = "js_function",
    srcs = [
        "js_function.cpp",
    ],
    hdrs = [
        "js_function.h",
    ],
    deps = [
        "//src/mongo/db:service_context",
        "//src/mongo/db/auth",
        "//src/mongo/db/query:query_knobs",
        "//src/mongo/scripting:scripting_common",
    ],
)

filegroup(
    name = "headers",
    srcs = [
        "batched_delete_stage.h",
        "batched_delete_stage_buffer.h",
        "delete_stage.h",
        "requires_collection_stage.h",
        "write_stage_common.h",
    ],
)

# WorkingSet target and associated test
mongo_cc_library(
    name = "working_set",
    srcs = [
        "working_set.cpp",
    ],
    hdrs = [
        "working_set.h",
    ],
    deps = [
        "//src/mongo:base",
        "//src/mongo/db:service_context",  # TODO(SERVER-93876): Remove.
        "//src/mongo/db/exec/document_value",
        "//src/mongo/db/query/bson:dotted_path_support",
    ],
)

idl_generator(
    name = "batched_delete_stage_gen",
    src = "batched_delete_stage.idl",
    deps = [
        "//src/mongo/db:basic_types_gen",
    ],
)

idl_generator(
    name = "disk_use_options_gen",
    src = "disk_use_options.idl",
)

mongo_cc_library(
    name = "scoped_timer",
    srcs = [
        "scoped_timer.cpp",
    ],
    hdrs = [
        "scoped_timer.h",
    ],
    deps = [
        "//src/mongo/db:service_context",
        "//src/mongo/util/net:network",
    ],
)

mongo_cc_library(
    name = "bucket_unpacker",
    srcs = [
        "//src/mongo/db/exec/timeseries:bucket_unpacker.cpp",
    ],
    hdrs = [
        "//src/mongo/db/exec/timeseries:bucket_unpacker.h",
    ],
    deps = [
        "//src/mongo/bson/column",
        "//src/mongo/db:query_expressions",
        "//src/mongo/db/exec/document_value",
        "//src/mongo/db/query:bucket_predicate_generator",
    ],
)

mongo_cc_library(
    name = "projection_executor",
    srcs = [
        "add_fields_projection_executor.cpp",
        "exclusion_projection_executor.cpp",
        "inclusion_projection_executor.cpp",
        "projection_executor_builder.cpp",
        "projection_executor_utils.cpp",
        "projection_node.cpp",
        "//src/mongo/base:exact_cast.h",
        "//src/mongo/db/query:projection_ast_path_tracking_visitor.h",
    ],
    hdrs = [
        "add_fields_projection_executor.h",
        "exclusion_projection_executor.h",
        "inclusion_projection_executor.h",
        "projection_executor_builder.h",
        "projection_executor_utils.h",
        "projection_node.h",
    ],
    deps = [
        "//src/mongo/db:query_expressions",
    ],
)

mongo_cc_library(
    name = "stagedebug_cmd",
    srcs = [
        "stagedebug_cmd.cpp",
    ],
    deps = [
        "//src/mongo/db:query_exec",
        "//src/mongo/db/commands:test_commands_enabled",
        "//src/mongo/db/index:index_access_method",
    ],
)

# -*- mode: python -*-

Import("env")
Import("get_option")

env = env.Clone()

env.SConscript(
    must_exist=1,
    dirs=[
        "process_interface",
    ],
    exports=[
        "env",
    ],
)

env.Library(
    target="document_source_mock",
    source=[
        "document_source_mock.cpp",
        "process_interface/stub_lookup_single_document_process_interface.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/db/query/query_test_service_context",
        "pipeline",
    ],
)

env.Benchmark(
    target="document_source_group_bm",
    source=[
        "document_source_group_bm.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/db/query/query_test_service_context",
        "$BUILD_DIR/mongo/db/service_context_non_d",
        "$BUILD_DIR/mongo/db/service_context_test_fixture",
        "document_source_mock",
        "pipeline",
    ],
    CONSOLIDATED_TARGET="second_half_bm",
)

env.Library(
    target="change_stream_test_helpers",
    source=[
        "change_stream_test_helpers.cpp",
    ],
    LIBDEPS=[
        "change_stream_pipeline",
    ],
)

env.CppUnitTest(
    target="db_pipeline_test",
    source=[
        "accumulator_js_test.cpp" if get_option("js-engine") != "none" else [],
        "accumulator_test.cpp",
        "aggregation_request_test.cpp",
        "change_stream_document_diff_parser_test.cpp",
        "change_stream_event_transform_test.cpp",
        "change_stream_rewrites_test.cpp",
        "change_stream_split_event_helpers_test.cpp",
        "dependencies_test.cpp",
        "dispatch_shard_pipeline_test.cpp",
        "document_path_support_test.cpp",
        "document_source_add_fields_test.cpp",
        "document_source_bucket_auto_test.cpp",
        "document_source_bucket_test.cpp",
        "document_source_change_stream_add_post_image_test.cpp",
        "document_source_change_stream_test.cpp",
        "document_source_check_resume_token_test.cpp",
        "document_source_coll_stats_test.cpp",
        "document_source_count_test.cpp",
        "document_source_current_op_test.cpp",
        "document_source_densify_test.cpp",
        "document_source_documents_test.cpp",
        "document_source_exchange_test.cpp",
        "document_source_facet_test.cpp",
        "document_source_find_and_modify_image_lookup_test.cpp",
        "document_source_geo_near_test.cpp",
        "document_source_graph_lookup_test.cpp",
        "document_source_group_test.cpp",
        "document_source_internal_apply_oplog_update_test.cpp",
        "document_source_internal_shard_filter_test.cpp",
        "document_source_internal_split_pipeline_test.cpp",
        "document_source_limit_test.cpp",
        "document_source_lookup_test.cpp",
        "document_source_match_test.cpp",
        "document_source_merge_cursors_test.cpp",
        "document_source_merge_test.cpp",
        "document_source_mock_test.cpp",
        "document_source_out_test.cpp",
        "document_source_plan_cache_stats_test.cpp",
        "document_source_project_test.cpp",
        "document_source_queue_test.cpp",
        "document_source_redact_test.cpp",
        "document_source_replace_root_test.cpp",
        "document_source_rank_fusion_test.cpp",
        "document_source_score_test.cpp",
        "document_source_score_fusion_test.cpp",
        "document_source_sample_test.cpp",
        "document_source_sequential_document_cache_test.cpp",
        "document_source_set_variable_from_subpipeline_test.cpp",
        "document_source_set_window_fields_test.cpp",
        "document_source_skip_test.cpp",
        "document_source_sort_by_count_test.cpp",
        "document_source_sort_test.cpp",
        "document_source_query_stats_test.cpp",
        "document_source_union_with_test.cpp",
        "document_source_internal_all_collection_stats_test.cpp",
        "document_source_internal_compute_geo_near_distance_test.cpp",
        "document_source_internal_convert_bucket_index_stats_test.cpp",
        "document_source_internal_unpack_bucket_test/extract_or_build_project_to_internalize_test.cpp",
        "document_source_internal_unpack_bucket_test/create_predicates_on_bucket_level_field_test.cpp",
        "document_source_internal_unpack_bucket_test/extract_project_for_pushdown_test.cpp",
        "document_source_internal_unpack_bucket_test/group_reorder_test.cpp",
        "document_source_internal_unpack_bucket_test/internalize_project_test.cpp",
        "document_source_internal_unpack_bucket_test/optimize_pipeline_test.cpp",
        "document_source_internal_unpack_bucket_test/optimize_lastpoint_test.cpp",
        "document_source_internal_unpack_bucket_test/pushdown_computed_meta_projections_test.cpp",
        "document_source_internal_unpack_bucket_test/sample_reorder_test.cpp",
        "document_source_internal_unpack_bucket_test/sort_reorder_test.cpp",
        "document_source_internal_unpack_bucket_test/top_k_sort_optimization_test.cpp",
        "document_source_internal_unpack_bucket_test/limit_reorder_test.cpp",
        "document_source_internal_unpack_bucket_test/split_match_on_meta_and_rename_test.cpp",
        "document_source_internal_unpack_bucket_test/unpack_bucket_exec_test.cpp",
        "document_source_internal_unpack_bucket_test/match_fixed_buckets_reorder_test.cpp",
        "document_source_unwind_test.cpp",
        "expression_and_test.cpp",
        "expression_compare_test.cpp",
        "expression_context_test.cpp",
        "expression_convert_test.cpp",
        "expression_date_test.cpp",
        "expression_field_path_test.cpp",
        "expression_find_internal_test.cpp",
        "expression_function_test.cpp",
        "expression_hasher_test.cpp",
        "expression_javascript_test.cpp" if get_option("js-engine") != "none" else [],
        "expression_let_test.cpp",
        "expression_nary_test.cpp",
        "expression_object_test.cpp",
        "expression_or_test.cpp",
        "expression_replace_test.cpp",
        "expression_test.cpp",
        "expression_test_api_version_test.cpp",
        "expression_trigonometric_test.cpp",
        "expression_trim_test.cpp",
        "expression_walker_test.cpp",
        "field_path_test.cpp",
        "granularity_rounder_powers_of_two_test.cpp",
        "granularity_rounder_preferred_numbers_test.cpp",
        "lookup_set_cache_test.cpp",
        "monotonic_expression_test.cpp",
        "partition_key_comparator_test.cpp",
        "pipeline_metadata_tree_test.cpp",
        "pipeline_test.cpp",
        "resume_token_test.cpp",
        "sampling_based_initial_split_policy_test.cpp",
        "search/document_source_search_test.cpp",
        "search/document_source_search_meta_test.cpp",
        "search/document_source_internal_search_id_lookup_test.cpp",
        "search/document_source_internal_search_mongot_remote_test.cpp",
        "search/document_source_list_search_indexes_test.cpp",
        "search/document_source_vector_search_test.cpp",
        "semantic_analysis_test.cpp",
        "sequential_document_cache_test.cpp",
        "serverless_aggregation_context_fixture.cpp",
        "sharded_union_test.cpp",
        "skip_and_limit_test.cpp",
        "tee_buffer_test.cpp",
        "visitors/docs_needed_bounds_test.cpp",
        "visitors/document_source_visitor_docs_needed_bounds_test.cpp",
        "visitors/document_source_walker_test.cpp",
        "window_function/partition_iterator_test.cpp",
        "window_function/spillable_cache_test.cpp",
        "window_function/window_function_add_to_set_test.cpp",
        "window_function/window_function_concat_arrays_test.cpp",
        "window_function/window_function_covariance_test.cpp",
        "window_function/window_function_exec_derivative_test.cpp",
        "window_function/window_function_exec_non_removable_test.cpp",
        "window_function/window_function_exec_removable_test.cpp",
        "window_function/window_function_integral_test.cpp",
        "window_function/window_function_min_max_test.cpp",
        "window_function/window_function_min_max_scalar_test.cpp",
        "window_function/window_function_n_test.cpp",
        "window_function/window_function_push_test.cpp",
        "window_function/window_function_set_union_test.cpp",
        "window_function/window_function_std_dev_test.cpp",
        "window_function/window_function_exec_first_last_test.cpp",
        "window_function/window_function_avg_test.cpp",
        "window_function/window_function_sum_test.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/base",
        "$BUILD_DIR/mongo/db/auth/authmocks",
        "$BUILD_DIR/mongo/db/change_stream_options",
        "$BUILD_DIR/mongo/db/change_stream_options_manager",
        "$BUILD_DIR/mongo/db/change_stream_pre_image_util",
        "$BUILD_DIR/mongo/db/change_stream_pre_images_collection_manager",
        "$BUILD_DIR/mongo/db/change_streams_cluster_parameter",
        "$BUILD_DIR/mongo/db/exec/document_value/document_value",
        "$BUILD_DIR/mongo/db/exec/document_value/document_value_test_util",
        "$BUILD_DIR/mongo/db/mongohasher",
        "$BUILD_DIR/mongo/db/op_observer/op_observer",
        "$BUILD_DIR/mongo/db/op_observer/op_observer_impl",
        "$BUILD_DIR/mongo/db/op_observer/operation_logger_impl",
        "$BUILD_DIR/mongo/db/pipeline/change_stream_expired_pre_image_remover",
        "$BUILD_DIR/mongo/db/query/collation/collator_interface_mock",
        "$BUILD_DIR/mongo/db/query/query_test_service_context",
        "$BUILD_DIR/mongo/db/query/search/mongot_cursor",
        "$BUILD_DIR/mongo/db/query/search/mongot_options",
        "$BUILD_DIR/mongo/db/query_expressions",
        "$BUILD_DIR/mongo/db/repl/image_collection_entry",
        "$BUILD_DIR/mongo/db/repl/oplog_entry",
        "$BUILD_DIR/mongo/db/repl/replmocks",
        "$BUILD_DIR/mongo/db/repl/storage_interface_impl",
        "$BUILD_DIR/mongo/db/s/shard_server_test_fixture",
        "$BUILD_DIR/mongo/db/s/sharding_runtime_d",
        "$BUILD_DIR/mongo/db/service_context_d_test_fixture",
        "$BUILD_DIR/mongo/db/storage/devnull/storage_devnull_core",
        "$BUILD_DIR/mongo/executor/thread_pool_task_executor_test_fixture",
        "$BUILD_DIR/mongo/s/query/exec/router_exec_stage",
        "$BUILD_DIR/mongo/s/sharding_mongos_test_fixture",
        "$BUILD_DIR/mongo/util/clock_source_mock",
        "accumulator",
        "aggregation_request_helper",
        "change_stream_pipeline",
        "change_stream_preimage",
        "change_stream_test_helpers",
        "docs_needed_bounds_visitor",
        "document_source_internal_apply_oplog_update",
        "document_source_mock",
        "document_sources_idl",
        "field_path",
        "granularity_rounder",
        "pipeline",
        "pipeline_visitor",
        "process_interface/mongod_process_interfaces",
        "process_interface/mongos_process_interface",
        "process_interface/shardsvr_process_interface",
        "sharded_agg_helpers",
    ],
)

env.CppUnitTest(
    target="db_percentile_algo_test",
    source=[
        "percentile_algo_continuous_test.cpp",
        "percentile_algo_discrete_test.cpp",
        "percentile_algo_tdigest_test.cpp",
        "percentile_algo_tdigest_distributed_test.cpp",
    ],
    LIBDEPS=[
        "accumulator",
    ],
)

env.Benchmark(
    target="percentile_algo_bm",
    source=[
        "percentile_algo_bm_fixture.cpp",
    ],
    LIBDEPS=[
        "accumulator",
    ],
    CONSOLIDATED_TARGET="query_bm",
)

env.CppUnitTest(
    target="common_sort_key_optimization_test",
    source=[
        "common_sort_key_optimization_test.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/db/query/query_test_service_context",
        "accumulator",
        "pipeline",
    ],
)

env.CppUnitTest(
    target="group_with_acc_n_optimization_test",
    source=[
        "group_with_acc_n_optimization_test.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/db/query/query_test_service_context",
        "accumulator",
        "pipeline",
    ],
)

env.Benchmark(
    target="window_function_percentile_bm",
    source=[
        "window_function/window_function_percentile_bm_fixture.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/db/query/query_test_service_context",
        "$BUILD_DIR/mongo/db/service_context_non_d",
        "accumulator",
    ],
    CONSOLIDATED_TARGET="query_nond_bm",
)

env.Benchmark(
    target="window_function_concat_arrays_bm",
    source=[
        "window_function/window_function_concat_arrays_bm_fixture.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/db/query/query_test_service_context",
        "$BUILD_DIR/mongo/db/service_context_non_d",
        "accumulator",
    ],
    CONSOLIDATED_TARGET="query_nond_bm",
)

bmEnv = env.Clone()
bmEnv.InjectThirdParty(libraries=["benchmark"])

bmEnv.Library(
    target="expression_bm_fixture",
    source=[
        "expression_bm_fixture.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/base",
        "$BUILD_DIR/mongo/db/exec/document_value/document_value",
        "$BUILD_DIR/third_party/benchmark/benchmark",
    ],
)

env.Benchmark(
    target="expression_bm",
    source=[
        "expression_bm.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/db/query/query_test_service_context",
        "$BUILD_DIR/mongo/db/query_expressions",
        "$BUILD_DIR/mongo/db/service_context_non_d",
        "$BUILD_DIR/mongo/db/service_context_test_fixture",
        "accumulator",
        "expression_bm_fixture",
    ],
)

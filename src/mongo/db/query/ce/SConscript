# -*- mode: python -*-

Import("env")

env = env.Clone()

env.Library(
    target="histogram_estimation_impl",
    source=[
        "histogram_estimation_impl.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/db/query/query_index_bounds",
        "$BUILD_DIR/mongo/db/query/stats/stats_histograms",
    ],
)

env.Library(
    target="ce_test_utils",
    source=[
        "test_utils.cpp",
        "histogram_accuracy_test_utils.cpp",
        "histogram_estimator.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/db/query/stats/stats_test_utils",
        "$BUILD_DIR/mongo/db/sbe_values",
        "$BUILD_DIR/mongo/db/server_base",
        "histogram_estimation_impl",
    ],
)

env.CppUnitTest(
    target="histogram_estimation_test",
    source=[
        "histogram_estimator_test.cpp",
        "histogram_estimation_impl_test.cpp",
    ],
    LIBDEPS=[
        "ce_test_utils",
    ],
)

env.CppUnitTest(
    target="maxdiff_histogram_test",
    source=[
        "maxdiff_histogram_test.cpp",
    ],
    LIBDEPS=[
        "ce_test_utils",
    ],
)

env.CppUnitTest(
    target="generated_histograms_test",
    source=[
        "generated_histograms_test.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/db/service_context_test_fixture",
        "ce_test_utils",
    ],
)

env.Benchmark(
    target="histogram_bm",
    source=["ce_histogram_bm.cpp"],
    LIBDEPS=[
        "$BUILD_DIR/mongo/db/query/query_test_service_context",
        "ce_test_utils",
    ],
    CONSOLIDATED_TARGET="second_half_bm",
)

env.Program(
    target="histogram_estimation_accuracy_test",
    source=["histogram_accuracy_test.cpp"],
    LIBDEPS=[
        "ce_test_utils",
    ],
)

env.Library(
    target="sampling_estimator",
    source=[
        "sampling_estimator.cpp",
    ],
    LIBDEPS=["$BUILD_DIR/mongo/db/query_exec"],
)

env.CppUnitTest(
    target="sampling_estimator_test",
    source=[
        "sampling_estimator_test.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/db/service_context_test_fixture",
        "sampling_estimator",
    ],
)

load("//bazel:mongo_src_rules.bzl", "idl_generator", "mongo_cc_library")

package(default_visibility = ["//visibility:public"])

exports_files(
    glob([
        "*.h",
        "*.cpp",
    ]),
)

mongo_cc_library(
    name = "write_ops_exec_util",
    srcs = [
        "write_ops_exec_util.cpp",
    ],
    hdrs = [
        "write_ops_exec_util.h",
    ],
    deps = [
        "//src/mongo:base",
        "//src/mongo/db:shard_role_api",
        "//src/mongo/db/repl:repl_coordinator_interface",
    ],
)

mongo_cc_library(
    name = "parsed_update",
    srcs = [
        "parsed_update_array_filters.cpp",
        "parsed_update_base.cpp",
    ],
    hdrs = [
        "parsed_update.h",
        "parsed_update_array_filters.h",
    ],
    deps = [
        "//src/mongo/db:disk_use_options_idl",
        "//src/mongo/db:query_expressions",
        "//src/mongo/db:server_base",
        "//src/mongo/db:shard_role_api",
        "//src/mongo/db/storage:storage_options",
        "//src/mongo/db/timeseries:timeseries_conversion_util",
        "//src/mongo/db/update:update_driver",
    ],
)

idl_generator(
    name = "single_write_result_gen",
    src = "single_write_result.idl",
    deps = [
        "//src/mongo/db:basic_types_gen",
    ],
)

mongo_cc_library(
    name = "write_ops",
    srcs = [
        "delete.cpp",
        "insert.cpp",
        "update.cpp",
        "write_ops_retryability.cpp",
        ":single_write_result_gen",
    ],
    hdrs = [
        "delete.h",
        "insert.h",
        "update.h",
        "write_ops_retryability.h",
    ],
    deps = [
        "//src/mongo:base",
        "//src/mongo/db:mongod_options",
        "//src/mongo/db:profile_collection",
        "//src/mongo/db:query_exec",
        "//src/mongo/db:service_context",
        "//src/mongo/db:shard_role",
        "//src/mongo/db/concurrency:exception_util",
        "//src/mongo/db/matcher:expressions_mongod_only",
        "//src/mongo/db/query:command_request_response",
        "//src/mongo/db/query/query_stats",
        "//src/mongo/db/repl:image_collection_entry",
        "//src/mongo/db/repl:repl_coordinator_interface",
        "//src/mongo/db/update:update_driver",
    ],
)

idl_generator(
    name = "write_ops_gen",
    src = "write_ops.idl",
    deps = [
        "//src/mongo/crypto:fle_field_schema_gen",
        "//src/mongo/db:basic_types_gen",
        "//src/mongo/db/auth:access_checks_gen",
        "//src/mongo/db/auth:action_type_gen",
        "//src/mongo/db/pipeline:legacy_runtime_constants_gen",
        "//src/mongo/db/query:hint_gen",
        "//src/mongo/db/session:logical_session_id_gen",
        "//src/mongo/idl:generic_argument_gen",
    ],
)

mongo_cc_library(
    name = "write_ops_parsers",
    srcs = [
        "write_ops.cpp",
        ":write_ops_gen",
        "//src/mongo/db/update:update_oplog_entry_serialization.h",
        "//src/mongo/db/update:update_oplog_entry_version.h",
    ],
    hdrs = [
        "write_ops.h",
    ],
    header_deps = [
        "//src/mongo/s/catalog:sharding_catalog_client",
    ],
    deps = [
        "//src/mongo:base",
        "//src/mongo/crypto:encrypted_field_config",
        "//src/mongo/crypto:fle_fields",
        "//src/mongo/db:dbmessage",
        "//src/mongo/db:server_base",  # TODO(SERVER-93876): Remove.
        "//src/mongo/db/auth:authprivilege",
        "//src/mongo/db/pipeline:runtime_constants_idl",
        "//src/mongo/db/query:hint_parser",
        "//src/mongo/db/repl:optime",  # TODO(SERVER-93876): Remove.
        "//src/mongo/idl:idl_parser",
        "//src/mongo/rpc:command_status",
        "//src/mongo/rpc:metadata_impersonated_user",
    ],
)

idl_generator(
    name = "delete_request_gen",
    src = "delete_request.idl",
    deps = [
        "//src/mongo/db:basic_types_gen",
        "//src/mongo/db/pipeline:legacy_runtime_constants_gen",
        "//src/mongo/db/query:hint_gen",
        "//src/mongo/db/session:logical_session_id_gen",
    ],
)

mongo_cc_library(
    name = "delete_request_idl",
    srcs = [
        ":delete_request_gen",
    ],
    hdrs = [
        "//src/mongo/db/pipeline:expression_from_accumulator_quantile.h",
    ],
    header_deps = [
        "//src/mongo/db/repl:oplog_buffer_batched_queue",
        "//src/mongo/db/commands:server_status_core",
    ],
    deps = [
        "//src/mongo/db:server_base",
        "//src/mongo/db/pipeline:runtime_constants_idl",
    ],
)

mongo_cc_library(
    name = "write_ops_exec",
    srcs = [
        "write_ops_exec.cpp",
    ],
    hdrs = [
        "write_ops_exec.h",
    ],
    deps = [
        ":write_ops",
        ":write_ops_exec_util",
        "//src/mongo:base",
        "//src/mongo/db:curop_metrics",
        "//src/mongo/db:dbhelpers",
        "//src/mongo/db:profile_collection",
        "//src/mongo/db:record_id_helpers",
        "//src/mongo/db:shard_role",
        "//src/mongo/db/catalog:catalog_helpers",
        "//src/mongo/db/catalog:collection_options",
        "//src/mongo/db/collection_crud",
        "//src/mongo/db/concurrency:exception_util",
        "//src/mongo/db/query/query_settings:manager",
        "//src/mongo/db/query/query_stats",
        "//src/mongo/db/repl:oplog",
        "//src/mongo/db/repl:repl_coordinator_interface",
        "//src/mongo/db/repl:tenant_migration_access_blocker",
        "//src/mongo/db/s:query_analysis_writer",
        "//src/mongo/db/stats:counters",
        "//src/mongo/db/stats:server_read_concern_write_concern_metrics",
        "//src/mongo/db/stats:top",
        "//src/mongo/db/storage:storage_options",
        "//src/mongo/db/timeseries:bucket_compression",
        "//src/mongo/db/timeseries:bucket_compression_failure",
        "//src/mongo/db/timeseries:timeseries_conversion_util",
        "//src/mongo/db/timeseries:timeseries_options",
        "//src/mongo/db/timeseries:timeseries_write_util",
        "//src/mongo/db/timeseries/bucket_catalog",
        "//src/mongo/db/transaction",
        "//src/mongo/db/transaction:transaction_api",
        "//src/mongo/executor:inline_executor",
        "//src/mongo/s:query_analysis_sampler",
        "//src/mongo/util:fail_point",
        "//src/mongo/util:log_and_backoff",
    ],
)

# -*- mode: python -*-

Import("env")

env = env.Clone()

env.Library(
    target="write_ops_exec",
    source=[
        "write_ops_exec.cpp",
    ],
    LIBDEPS=[
        "write_ops_exec_util",
    ],
    LIBDEPS_PRIVATE=[
        "$BUILD_DIR/mongo/base",
        "$BUILD_DIR/mongo/db/catalog/catalog_helpers",
        "$BUILD_DIR/mongo/db/catalog/collection_crud",
        "$BUILD_DIR/mongo/db/catalog/collection_options",
        "$BUILD_DIR/mongo/db/concurrency/exception_util",
        "$BUILD_DIR/mongo/db/curop_metrics",
        "$BUILD_DIR/mongo/db/dbhelpers",
        "$BUILD_DIR/mongo/db/profile_collection",
        "$BUILD_DIR/mongo/db/query/query_settings/manager",
        "$BUILD_DIR/mongo/db/query/query_stats/query_stats",
        "$BUILD_DIR/mongo/db/record_id_helpers",
        "$BUILD_DIR/mongo/db/repl/oplog",
        "$BUILD_DIR/mongo/db/repl/repl_coordinator_interface",
        "$BUILD_DIR/mongo/db/repl/tenant_migration_access_blocker",
        "$BUILD_DIR/mongo/db/s/query_analysis_writer",
        "$BUILD_DIR/mongo/db/shard_role",
        "$BUILD_DIR/mongo/db/stats/counters",
        "$BUILD_DIR/mongo/db/stats/server_read_concern_write_concern_metrics",
        "$BUILD_DIR/mongo/db/stats/top",
        "$BUILD_DIR/mongo/db/storage/storage_options",
        "$BUILD_DIR/mongo/db/timeseries/bucket_catalog/bucket_catalog",
        "$BUILD_DIR/mongo/db/timeseries/bucket_compression",
        "$BUILD_DIR/mongo/db/timeseries/bucket_compression_failure",
        "$BUILD_DIR/mongo/db/timeseries/timeseries_conversion_util",
        "$BUILD_DIR/mongo/db/timeseries/timeseries_options",
        "$BUILD_DIR/mongo/db/timeseries/timeseries_write_util",
        "$BUILD_DIR/mongo/db/transaction/transaction",
        "$BUILD_DIR/mongo/db/transaction/transaction_api",
        "$BUILD_DIR/mongo/executor/inline_executor",
        "$BUILD_DIR/mongo/s/query_analysis_sampler",
        "$BUILD_DIR/mongo/util/fail_point",
        "$BUILD_DIR/mongo/util/log_and_backoff",
        "write_ops",
    ],
)

env.Library(
    target="write_ops_parsers_test_helpers",
    source=[
        "write_ops_parsers_test_helpers.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/base",
        "$BUILD_DIR/mongo/db/dbmessage",
    ],
)

env.CppUnitTest(
    target="db_ops_test",
    source=[
        "write_ops_exec_test.cpp",
        "write_ops_parsers_test.cpp",
        "write_ops_retryability_test.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/db/auth/authmocks",
        "$BUILD_DIR/mongo/db/catalog/catalog_test_fixture",
        "$BUILD_DIR/mongo/db/catalog/collection_crud",
        "$BUILD_DIR/mongo/db/op_observer/op_observer",
        "$BUILD_DIR/mongo/db/query_exec",
        "$BUILD_DIR/mongo/db/record_id_helpers",
        "$BUILD_DIR/mongo/db/repl/mock_repl_coord_server_fixture",
        "$BUILD_DIR/mongo/db/repl/oplog_entry",
        "$BUILD_DIR/mongo/db/session/session_catalog",
        "$BUILD_DIR/mongo/db/timeseries/bucket_compression",
        "$BUILD_DIR/mongo/db/transaction/transaction",
        "write_ops",
        "write_ops_exec",
        "write_ops_parsers",
        "write_ops_parsers_test_helpers",
    ],
)

env.CppIntegrationTest(
    target="db_ops_integration_test",
    source=[
        "write_ops_document_stream_integration_test.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/client/clientdriver_network",
        "$BUILD_DIR/mongo/transport/transport_layer_egress_init",
        "$BUILD_DIR/mongo/util/version_impl",
    ],
)

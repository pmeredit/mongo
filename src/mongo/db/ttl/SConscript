Import("env")

env = env.Clone()

env.Library(
    target="ttl_d",
    source=[
        "ttl.cpp",
        "ttl_gen.cpp",
    ],
    LIBDEPS_PRIVATE=[
        "$BUILD_DIR/mongo/db/catalog/catalog_helpers",
        "$BUILD_DIR/mongo/db/catalog/index_key_validate",
        "$BUILD_DIR/mongo/db/coll_mod_command_idl",
        "$BUILD_DIR/mongo/db/commands/fsync_locked",
        "$BUILD_DIR/mongo/db/commands/server_status_core",
        "$BUILD_DIR/mongo/db/index_commands_idl",
        "$BUILD_DIR/mongo/db/query/write_ops/write_ops",
        "$BUILD_DIR/mongo/db/query_exec",
        "$BUILD_DIR/mongo/db/record_id_helpers",
        "$BUILD_DIR/mongo/db/repl/replica_set_aware_service",
        "$BUILD_DIR/mongo/db/repl/tenant_migration_access_blocker",
        "$BUILD_DIR/mongo/db/s/sharding_runtime_d",
        "$BUILD_DIR/mongo/db/server_base",
        "$BUILD_DIR/mongo/db/service_context",
        "$BUILD_DIR/mongo/db/shard_role",
        "ttl_collection_cache",
    ],
)

env.CppUnitTest(
    target="ttl_test",
    source=[
        "ttl_collection_cache_test.cpp",
        "ttl_test.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/db/dbdirectclient",
        "$BUILD_DIR/mongo/db/index_build_entry_helpers",
        "$BUILD_DIR/mongo/db/index_builds_coordinator_mongod",
        "$BUILD_DIR/mongo/db/repl/replmocks",
        "$BUILD_DIR/mongo/db/service_context_d_test_fixture",
        "$BUILD_DIR/mongo/db/shard_role",
        "ttl_collection_cache",
        "ttl_d",
    ],
)

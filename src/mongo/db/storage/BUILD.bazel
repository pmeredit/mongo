load("//bazel:mongo_src_rules.bzl", "idl_generator", "mongo_cc_library")

package(default_visibility = ["//visibility:public"])

exports_files(
    glob([
        "*.h",
        "*.cpp",
    ]),
)

mongo_cc_library(
    name = "bson_collection_catalog_entry",
    srcs = [
        "bson_collection_catalog_entry.cpp",
    ],
    hdrs = [
        "bson_collection_catalog_entry.h",
    ],
    deps = [
        "//src/mongo/db:common",
        "//src/mongo/db:multitenancy",  # TODO(SERVER-93876): Remove.
        "//src/mongo/db:server_base",  # TODO(SERVER-93876): Remove.
        "//src/mongo/db:server_options",  # TODO(SERVER-93876): Remove.
        "//src/mongo/db:service_context",  # TODO(SERVER-93876): Remove.
        "//src/mongo/db/catalog:collection_options",
    ],
)

mongo_cc_library(
    name = "recovery_unit_base",
    srcs = [
        "recovery_unit.cpp",
        "recovery_unit.h",
        "recovery_unit_noop.cpp",
        "recovery_unit_noop.h",
    ],
    deps = [
        "//src/mongo:base",
        "//src/mongo/db:server_base",  # TODO(SERVER-93876): Remove.
        "//src/mongo/util:fail_point",
    ],
)

mongo_cc_library(
    name = "record_store_base",
    srcs = [
        "collection_truncate_markers.cpp",
        "external_record_store.cpp",
        "input_object.h",
        "io_error_message.h",
        "multi_bson_stream_cursor.cpp",
        "record_store.cpp",
        "//src/mongo/db/exec:headers",
        "//src/mongo/db/query:internal_plans.h",
        "//src/mongo/db/s:shard_key_index_util.h",
    ] + select({
        "@platforms//os:windows": ["named_pipe_windows.cpp"],
        "//conditions:default": ["named_pipe_posix.cpp"],
    }),
    hdrs = [
        "collection_truncate_markers.h",
        "external_record_store.h",
        "input_stream.h",
        "multi_bson_stream_cursor.h",
        "named_pipe.h",
        "record_store.h",
        "//src/mongo/db/exec:batched_delete_stage_gen",
        "//src/mongo/db/storage:damage_vector.h",
    ],
    deps = [
        ":storage_options",  # TODO(SERVER-93876): Remove.
        "//src/mongo/db:server_base",  # TODO(SERVER-93876): Remove.
        "//src/mongo/db:service_context",  # TODO(SERVER-93876): Remove.
        "//src/mongo/util:fail_point",  # TODO(SERVER-93876): Remove.
    ] + select({
        "@platforms//os:windows": [],
        "//conditions:default": ["//src/mongo/db/query:query_knobs"],
    }),
)

mongo_cc_library(
    name = "damage_vector",
    srcs = [],
    hdrs = [
        "damage_vector.h",
    ],
)

mongo_cc_library(
    name = "remove_saver",
    srcs = [
        "remove_saver.cpp",
    ],
    hdrs = [
        "remove_saver.h",
    ],
    deps = [
        ":encryption_hooks",
        ":storage_options",  # TODO(SERVER-93876): Remove.
        "//src/mongo/db:server_base",
    ],
)

mongo_cc_library(
    name = "journal_flusher",
    srcs = [
        "//src/mongo/db/storage/control:journal_flusher.cpp",
    ],
    hdrs = [
        "//src/mongo/db/storage/control:journal_flusher.h",
    ],
    deps = [
        ":storage_options",
        "//src/mongo/db:server_base",
        "//src/mongo/db:service_context",
        "//src/mongo/db/admission:execution_admission_context",  # TODO(SERVER-93876): Remove.
        "//src/mongo/util:background_job",
        "//src/mongo/util:fail_point",  # TODO(SERVER-93876): Remove.
        "//src/mongo/util/concurrency:spin_lock",  # TODO(SERVER-93876): Remove.
    ],
)

mongo_cc_library(
    name = "encryption_hooks",
    srcs = [
        "encryption_hooks.cpp",
    ],
    hdrs = [
        "data_protector.h",
        "encryption_hooks.h",
    ],
    deps = [
        "//src/mongo:base",
        "//src/mongo/db:service_context",
    ],
)

mongo_cc_library(
    name = "backup_cursor_hooks",
    srcs = [
        "backup_cursor_hooks.cpp",
    ],
    hdrs = [
        "backup_cursor_hooks.h",
    ],
    deps = [
        "//src/mongo:base",
        "//src/mongo/db:service_context",
    ],
)

idl_generator(
    name = "storage_parameters_gen",
    src = "storage_parameters.idl",
)

mongo_cc_library(
    name = "capped_snapshots",
    srcs = [
        "capped_snapshots.cpp",
    ],
    hdrs = [
        "capped_snapshots.h",
    ],
    deps = [
        ":recovery_unit_base",  # TODO(SERVER-93876): Remove.
        "//src/mongo:base",
        "//src/mongo/db/concurrency:lock_manager",
    ],
)

mongo_cc_library(
    name = "snapshot_helper",
    srcs = [
        "snapshot_helper.cpp",
    ],
    hdrs = [
        "snapshot_helper.h",
    ],
    deps = [
        ":recovery_unit_base",  # TODO(SERVER-93876): Remove.
        "//src/mongo/db:server_base",
        "//src/mongo/db/concurrency:lock_manager",  # TODO(SERVER-93876): Remove.
        "//src/mongo/db/repl:read_concern_args",  # TODO(SERVER-93876): Remove.
        "//src/mongo/db/repl:repl_coordinator_interface",
    ],
)

idl_generator(
    name = "flow_control_parameters_gen",
    src = "flow_control_parameters.idl",
)

mongo_cc_library(
    name = "flow_control_parameters",
    srcs = [
        ":flow_control_parameters_gen",
    ],
    deps = [
        "//src/mongo/db:server_base",
    ],
)

mongo_cc_library(
    name = "flow_control",
    srcs = [
        "flow_control.cpp",
    ],
    hdrs = [
        "flow_control.h",
    ],
    deps = [
        ":flow_control_parameters",
        "//src/mongo/db:server_base",
        "//src/mongo/db:service_context",  # TODO(SERVER-93876): Remove.
        "//src/mongo/db:shard_role_api",
        "//src/mongo/db/commands:server_status_core",
        "//src/mongo/db/concurrency:flow_control_ticketholder",
        "//src/mongo/util:background_job",
        "//src/mongo/util:fail_point",
    ],
)

idl_generator(
    name = "two_phase_index_build_knobs_gen",
    src = "two_phase_index_build_knobs.idl",
)

mongo_cc_library(
    name = "storage_file_util",
    srcs = [
        "storage_file_util.cpp",
    ],
    hdrs = [
        "storage_file_util.h",
    ],
    deps = [
        "//src/mongo:base",
    ],
)

mongo_cc_library(
    name = "storage_repair_observer",
    srcs = [
        "storage_repair_observer.cpp",
    ],
    hdrs = [
        "storage_repair_observer.h",
    ],
    deps = [
        ":storage_file_util",
        "//src/mongo:base",  # TODO(SERVER-93876): Remove.
        "//src/mongo/db:service_context",
        "//src/mongo/db/repl:replica_set_messages",  # TODO(SERVER-93876): Remove.
        "//src/mongo/db/repl:storage_interface",
        "//src/mongo/db/storage:journal_flusher",
    ],
)

mongo_cc_library(
    name = "duplicate_key_error_info",
    srcs = [
        "duplicate_key_error_info.cpp",
    ],
    hdrs = [
        "duplicate_key_error_info.h",
    ],
    header_deps = [
        "//src/mongo/db/concurrency:flow_control_ticketholder",
    ],
    deps = [
        "//src/mongo:base",
    ],
)

mongo_cc_library(
    name = "execution_context",
    srcs = [
        "execution_context.cpp",
    ],
    hdrs = [
        "execution_context.h",
        "//src/mongo/bson:bson_validate_gen",
        "//src/mongo/client:client_api_version_parameters_gen",
        "//src/mongo/client:hedging_mode_gen",
        "//src/mongo/client:read_preference_gen",
        "//src/mongo/crypto:encryption_fields_gen",
        "//src/mongo/crypto:fle_field_schema_gen",
        "//src/mongo/crypto:fle_stats_gen",
        "//src/mongo/db:api_parameters_gen",
        "//src/mongo/db:basic_types_gen",
        "//src/mongo/db:multitenancy_gen",
        "//src/mongo/db:namespace_spec_gen",
        "//src/mongo/db:read_write_concern_provenance_base_gen",
        "//src/mongo/db:resumable_index_builds_gen",
        "//src/mongo/db:vector_clock_gen",
        "//src/mongo/db:write_concern_gen",
        "//src/mongo/db/auth:access_checks_gen",
        "//src/mongo/db/auth:action_type_gen",
        "//src/mongo/db/auth:auth_types_gen",
        "//src/mongo/db/catalog:clustered_collection_options_gen",
        "//src/mongo/db/catalog:collection_options_gen",
        "//src/mongo/db/exec:index_path_projection.h",
        "//src/mongo/db/exec:projection_executor.h",
        "//src/mongo/db/exec:projection_executor_builder.h",
        "//src/mongo/db/matcher/schema:encrypt_schema_gen",
        "//src/mongo/db/pipeline:change_stream_pre_and_post_images_options_gen",
        "//src/mongo/db/pipeline:document_source_change_stream_gen",
        "//src/mongo/db/pipeline:legacy_runtime_constants_gen",
        "//src/mongo/db/pipeline:storage_stats_spec_gen",
        "//src/mongo/db/pipeline:transformer_interface.h",
        "//src/mongo/db/query:distinct_command_gen",
        "//src/mongo/db/query:explain_verbosity_gen",
        "//src/mongo/db/query:find_command_gen",
        "//src/mongo/db/query:projection_parser.h",
        "//src/mongo/db/query:query_feature_flags_gen",
        "//src/mongo/db/query:query_knobs_gen",
        "//src/mongo/db/query:tailable_mode_gen",
        "//src/mongo/db/query/client_cursor:cursor_response_gen",
        "//src/mongo/db/query/client_cursor:generic_cursor_gen",
        "//src/mongo/db/query/query_settings:query_settings_gen",
        "//src/mongo/db/query/write_ops:single_write_result_gen",
        "//src/mongo/db/query/write_ops:write_ops_gen",
        "//src/mongo/db/repl:apply_ops_gen",
        "//src/mongo/db/repl:member_config_gen",
        "//src/mongo/db/repl:oplog_entry_gen",
        "//src/mongo/db/repl:optime_base_gen",
        "//src/mongo/db/repl:read_concern_gen",
        "//src/mongo/db/repl:repl_server_parameters_gen",
        "//src/mongo/db/repl:repl_set_config_gen",
        "//src/mongo/db/repl:repl_set_config_params_gen",
        "//src/mongo/db/session:logical_session_cache_gen",
        "//src/mongo/db/session:logical_session_id_gen",
        "//src/mongo/db/sorter:sorter_gen",
        "//src/mongo/db/timeseries:timeseries_gen",
        "//src/mongo/idl:cluster_server_parameter_gen",
        "//src/mongo/idl:generic_argument_gen",
        "//src/mongo/rpc:topology_version_gen",
        "//src/mongo/rpc/metadata:impersonated_user_metadata_gen",
        "//src/mongo/s:chunk_version_gen",
        "//src/mongo/s:database_version_base_gen",
        "//src/mongo/s:gossiped_routing_cache_gen",
        "//src/mongo/util:auto_clear_ptr.h",
        "//src/mongo/util/version:releases_header",
    ],
    header_deps = [
        "//src/mongo/db/commands:server_status_core",
    ],
    deps = [
        "//src/mongo:base",
        "//src/mongo/db/storage/key_string",
    ],
)

mongo_cc_library(
    name = "index_entry_comparison",
    srcs = [
        "index_entry_comparison.cpp",
    ],
    hdrs = [
        "index_entry_comparison.h",
    ],
    deps = [
        ":duplicate_key_error_info",
        "//src/mongo/db:server_base",
        "//src/mongo/db/catalog:index_catalog",
        "//src/mongo/db/storage/key_string",
    ],
)

mongo_cc_library(
    name = "storage_engine_metadata",
    srcs = [
        "storage_engine_metadata.cpp",
    ],
    hdrs = [
        "storage_engine_metadata.h",
        "//src/mongo/bson:bson_validate_gen",
        "//src/mongo/db:basic_types_gen",
        "//src/mongo/db/query:explain_verbosity_gen",
    ],
    header_deps = [
        "//src/mongo/db/repl:oplog_buffer_batched_queue",
    ],
    deps = [
        "//src/mongo/bson:bson_validate",
        "//src/mongo/db:server_base",
        "//src/mongo/db/query/bson:dotted_path_support",
    ],
)

mongo_cc_library(
    name = "storage_engine_lock_file",
    srcs = [
        "storage_engine_lock_file.cpp",
    ] + select({
        "@platforms//os:windows": ["storage_engine_lock_file_windows.cpp"],
        "//conditions:default": ["storage_engine_lock_file_posix.cpp"],
    }),
    hdrs = [
        "storage_engine_lock_file.h",
    ],
    deps = [
        "//src/mongo:base",
        "//src/mongo/db:service_context",
    ],
)

mongo_cc_library(
    name = "storage_options",
    srcs = [
        "storage_options.cpp",
        ":storage_parameters_gen",
    ],
    hdrs = [
        "storage_engine_interface.h",
        "storage_options.h",
    ],
    deps = [
        "//src/mongo/db:server_base",
    ],
)

mongo_cc_library(
    name = "durable_catalog",
    srcs = [
        "durable_catalog.cpp",
        "//src/mongo/db/catalog:import_options.h",
        "//src/mongo/db/storage/kv:kv_engine.h",
    ],
    hdrs = [
        "durable_catalog.h",
    ],
    deps = [
        ":bson_collection_catalog_entry",
        ":record_store_base",
        ":storage_options",  # TODO(SERVER-93876): Remove.
        "//src/mongo/db:multitenancy",
        "//src/mongo/db:server_base",
        "//src/mongo/db/concurrency:lock_manager",
    ],
)

mongo_cc_library(
    name = "storage_init_d",
    srcs = [
        "storage_init.cpp",
    ],
    deps = [
        ":backup_cursor_hooks",  # TODO(SERVER-93876): Remove.
        ":storage_options",  # TODO(SERVER-93876): Remove.
        "//src/mongo/db/commands:server_status_core",
    ],
)

mongo_cc_library(
    name = "two_phase_index_build_knobs_idl",
    srcs = [
        ":two_phase_index_build_knobs_gen",
    ],
    deps = [
        "//src/mongo/db:server_base",
    ],
)

mongo_cc_library(
    name = "disk_space_util",
    srcs = [
        "disk_space_util.cpp",
        "disk_space_util.h",
    ],
    deps = [
        ":storage_options",  # TODO(SERVER-93876): Remove.
        "//src/mongo:base",
        "//src/mongo/util:fail_point",
    ],
)

mongo_cc_library(
    name = "disk_space_monitor",
    srcs = [
        "disk_space_monitor.cpp",
    ],
    hdrs = [
        "disk_space_monitor.h",
    ],
    deps = [
        ":disk_space_util",
        ":storage_options",  # TODO(SERVER-93876): Remove.
        "//src/mongo/db:server_base",  # TODO(SERVER-93876): Remove.
        "//src/mongo/db:service_context",  # TODO(SERVER-93876): Remove.
        "//src/mongo/db/commands:server_status_core",
    ],
)

mongo_cc_library(
    name = "checkpointer",
    srcs = [
        "checkpointer.cpp",
    ],
    hdrs = [
        "checkpointer.h",
    ],
    deps = [
        ":storage_options",
        "//src/mongo/db:server_base",
        "//src/mongo/db:service_context",  # TODO(SERVER-93876): Remove.
        "//src/mongo/util:background_job",
        "//src/mongo/util:fail_point",  # TODO(SERVER-93876): Remove.
        "//src/mongo/util/concurrency:spin_lock",  # TODO(SERVER-93876): Remove.
    ],
)

mongo_cc_library(
    name = "storage_control",
    srcs = [
        "durable_history_pin.cpp",
        "//src/mongo/db/storage/control:storage_control.cpp",
    ],
    hdrs = [
        "durable_history_pin.h",
        "//src/mongo/db/storage/control:storage_control.h",
    ],
    deps = [
        ":checkpointer",
        ":journal_flusher",
        ":storage_options",  # TODO(SERVER-93876): Remove.
        "//src/mongo:base",
        "//src/mongo/db:service_context",
        "//src/mongo/db/commands:test_commands_enabled",  # TODO(SERVER-93876): Remove.
    ],
)

mongo_cc_library(
    name = "write_unit_of_work",
    srcs = [
        "write_unit_of_work.cpp",
    ],
    hdrs = [
        "write_unit_of_work.cpp",
    ],
    header_deps = [
        "//src/mongo/db/commands:server_status_core",
        "//src/mongo/db/op_observer:op_observer",
    ],
    deps = [
        "recovery_unit_base",
        "storage_options",
        "//src/mongo:base",
    ],
)

mongo_cc_library(
    name = "backup_block",
    srcs = [
        "backup_block.cpp",
    ],
    hdrs = [
        "backup_block.h",
    ],
    deps = [
        ":storage_options",
        "//src/mongo/db:server_base",
        "//src/mongo/db:shard_role_api",
    ],
)

mongo_cc_library(
    name = "oplog_cap_maintainer_thread",
    srcs = [
        "oplog_cap_maintainer_thread.cpp",
    ],
    hdrs = [
        "oplog_cap_maintainer_thread.h",
    ],
    deps = [
        "//src/mongo/db:server_base",
        "//src/mongo/db:service_context",
        "//src/mongo/db:shard_role",
        "//src/mongo/db/catalog:collection_catalog",
        "//src/mongo/db/catalog:database_holder",
        "//src/mongo/db/catalog:local_oplog_info",
        "//src/mongo/db/concurrency:lock_manager",
        "//src/mongo/util:background_job",
        "//src/mongo/util/concurrency:spin_lock",
    ],
)

mongo_cc_library(
    name = "storage_engine_common",
    srcs = [
        "storage_engine_change_context.cpp",
        "storage_engine_init.cpp",
    ],
    hdrs = [
        "storage_engine_change_context.h",
        "storage_engine_init.h",
    ],
    deps = [
        ":storage_control",
        ":storage_engine_lock_file",
        ":storage_engine_metadata",
        ":storage_options",
        ":storage_repair_observer",
        "//src/mongo/db:service_context",
        "//src/mongo/db:shard_role_api",
        "//src/mongo/db/exec:scoped_timer",
        "//src/mongo/util/concurrency:spin_lock",
    ],
)

mongo_cc_library(
    name = "storage_util",
    srcs = [
        "storage_util.cpp",
    ],
    hdrs = [
        "storage_util.h",
    ],
    deps = [
        ":durable_catalog",
        ":storage_options",
        "//src/mongo/db:multitenancy",
        "//src/mongo/db/catalog:collection_catalog",
        "//src/mongo/db/storage/kv:kv_drop_pending_ident_reaper",
    ],
)

mongo_cc_library(
    name = "storage_engine_impl",
    srcs = [
        "deferred_drop_record_store.cpp",
        "storage_engine_impl.cpp",
    ],
    hdrs = [
        "deferred_drop_record_store.h",
        "journal_listener.h",
        "storage_engine_impl.h",
    ],
    deps = [
        ":backup_block",
        ":durable_catalog",
        ":storage_control",
        ":storage_options",
        ":storage_repair_observer",
        ":storage_util",
        ":two_phase_index_build_knobs_idl",
        "//src/mongo/db:audit",
        "//src/mongo/db:multitenancy",
        "//src/mongo/db:resumable_index_builds_idl",
        "//src/mongo/db:server_base",
        "//src/mongo/db:server_feature_flags",
        "//src/mongo/db:shard_role",
        "//src/mongo/db:vector_clock",
        "//src/mongo/db/catalog:catalog_control",
        "//src/mongo/db/catalog:catalog_helpers",
        "//src/mongo/db/catalog:collection_options",
        "//src/mongo/db/catalog:index_catalog",
        "//src/mongo/db/storage/kv:kv_drop_pending_ident_reaper",
    ],
)

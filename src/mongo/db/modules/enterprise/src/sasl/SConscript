# -*- mode: python; -*-

import SCons

from libdeps_tool import deptype

Import("env")
Import("ssl_provider")
Import("have_sasl_lib")

env = env.Clone()

if env.TargetOSIs("windows"):
    env.SharedLibrary(
        target="cyrus_sasl_windows_test_plugin",
        source=["cyrus_sasl_windows_test_plugin.cpp"],
        LIBDEPS_NO_INHERIT=[
            "$BUILD_DIR/third_party/tcmalloc/tcmalloc",
            "$BUILD_DIR/third_party/gperftools/tcmalloc_minimal",
        ],
        AIB_COMPONENT="dist-test",
    )

if not have_sasl_lib:
    env.ConfError("Could not find <sasl/sasl.h> and sasl library, required for enterprise build.")

env.Library(
    target="oidc_external_state_vars",
    source=[
        "oidc_external_state_vars.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/base",
        "$BUILD_DIR/mongo/db/auth/auth_impl_internal",
    ],
)

sasl_oidc_server_var = []

if ssl_provider == "openssl":
    env.Library(
        target="sasl_oidc_server",
        source=[
            "authz_manager_external_state_oidc.cpp",
            "identity_provider.cpp",
            "idp_jwks_refresher.cpp",
            "idp_manager.cpp",
            "oidc_commands_gen.cpp",
            "oidc_commands.cpp",
            "oidc_parameters_gen.cpp",
            "sasl_oidc_server_conversation.cpp",
            "user_request_oidc.cpp",
        ],
        LIBDEPS_PRIVATE=[
            "$BUILD_DIR/mongo/crypto/jwt",
            "$BUILD_DIR/mongo/db/auth/auth_impl_internal",
            "$BUILD_DIR/mongo/db/auth/sasl_mechanism_protocol",
            "$BUILD_DIR/mongo/db/auth/sasl_options",
            "$BUILD_DIR/mongo/db/auth/sasl_options_init",
            "$BUILD_DIR/mongo/db/auth/saslauth",
            "$BUILD_DIR/mongo/db/commands",
            "$BUILD_DIR/mongo/db/commands/test_commands_enabled",
            "$BUILD_DIR/mongo/db/server_base",
            "$BUILD_DIR/mongo/db/server_feature_flags",
            "$BUILD_DIR/mongo/util/background_job",
            "$BUILD_DIR/mongo/util/pcre_wrapper",
            "oidc_external_state_vars",
        ],
    )

    env.CppUnitTest(
        target="sasl_oidc_server_test",
        source=[
            "oidc_core_options_stub.cpp",
            "idp_manager_test.cpp",
        ],
        LIBDEPS=[
            "$BUILD_DIR/mongo/crypto/jwt",
            "$BUILD_DIR/mongo/db/server_base",
            "$BUILD_DIR/mongo/db/server_feature_flags",
            "$BUILD_DIR/mongo/util/clock_source_mock",
            "sasl_oidc_server",
        ],
    )

env.Library(
    target="authz_manager_factory_external",
    source=[
        "authorization_manager_factory_external_impl.cpp",
    ],
    LIBDEPS_PRIVATE=[
        "$BUILD_DIR/mongo/db/auth/authserver",
        "$BUILD_DIR/mongo/db/service_context",
        "$BUILD_DIR/mongo/util/background_job",
        "../ldap/ldap_manager",
        "../ldap/mongo_ldap",
        "oidc_external_state_vars",
        "sasl_oidc_server" if ssl_provider == "openssl" else [],
    ],
)

kmsEnv = env.Clone()

kmsEnv.InjectThirdParty(libraries=["libmongocrypt"])

if not env.TargetOSIs("darwin"):
    kmsEnv.CppUnitTest(
        target="sasl_aws_protocol_test",
        source=[
            "sasl_aws_protocol_test.cpp",
        ],
        LIBDEPS=[
            "$BUILD_DIR/mongo/client/sasl_aws_client",
            "$BUILD_DIR/mongo/client/sasl_aws_common",
            "$BUILD_DIR/third_party/libmongocrypt/mongocrypt",
            "sasl_aws_server",
        ],
    )

if env.TargetOSIs("windows"):
    # Ensure we're building with /MD or /MDd
    mdFlags = ["/MD", "/MDd"]
    hasFlag = 0
    for mdFlag in mdFlags:
        if mdFlag in env["CCFLAGS"]:
            hasFlag += 1
    if hasFlag != 1:
        env.FatalError(
            "You must enable dynamic CRT --dynamic-windows to build the " "enterprise version"
        )
elif not env.TargetOSIs("darwin"):
    env.CppUnitTest(
        target="sasl_authentication_session_gssapi_test",
        source=[
            "sasl_authentication_session_gssapi_test.cpp",
        ],
        UNITTEST_HAS_CUSTOM_MAINLINE=True,
        LIBDEPS=[
            "$BUILD_DIR/mongo/base",
            "$BUILD_DIR/mongo/client/clientdriver_network",
            "$BUILD_DIR/mongo/client/cyrus_sasl_client",
            "$BUILD_DIR/mongo/db/auth/auth",
            "$BUILD_DIR/mongo/db/auth/authmocks",
            "$BUILD_DIR/mongo/db/auth/saslauth",
            "$BUILD_DIR/mongo/db/service_context_non_d",
            "$BUILD_DIR/mongo/db/service_context_test_fixture",
            "$BUILD_DIR/mongo/executor/network_interface_factory",
            "$BUILD_DIR/mongo/executor/network_interface_thread_pool",
            "$BUILD_DIR/mongo/executor/thread_pool_task_executor",
            "$BUILD_DIR/mongo/unittest/unittest",
            "$BUILD_DIR/mongo/util/net/network",
            "../ldap/ldap_manager_init",
            "mongosaslservercommon",
            "mongosaslserversession",
        ],
        SYSLIBDEPS=env.get("MONGO_LDAP_LIB", []) + env.get("MONGO_GSSAPI_LIB", []) + ["sasl2"],
    )

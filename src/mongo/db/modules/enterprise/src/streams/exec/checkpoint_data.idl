#
#    Copyright (C) 2023-present MongoDB, Inc.
#

global:
    cpp_namespace: "mongo"

imports:
    - "mongo/db/basic_types.idl"
    # Only used for the OperatorStatsDoc struct.
    - "mongo/db/modules/enterprise/src/streams/exec/exec_internal.idl"

# TOOD(SERVER-78463): Version all these structs so updates are easily supported.
structs:
    WatermarkState:
        strict: true
        description: Watermark state in checkpoint data.
        fields:
            eventTimeMs:
                type: safeInt64

    KafkaPartitionCheckpointState:
        strict: true
        description: Checkpoint state of a single Kafka topic partition in a $source operator.
        fields:
            partition:
                description: Partition number.
                type: int
            offset:
                description: Log offset of the partition.
                type: safeInt64
            watermark:
                description: Event time watermark of the partition.
                type: WatermarkState
                optional: true

    KafkaSourceCheckpointState:
        description: Checkpoint state of a Kafka $source operator.
        strict: true
        fields:
            partitions:
                type: array<KafkaPartitionCheckpointState>
            consumerGroupId:
                description: Consumer group ID. This is either supplied by the user when the stream processor is created or one is auto-generated.
                type: string
                optional: true
    
    ChangeStreamSourceCheckpointState:
        description: "Checkpoint state of a MongoDB changestream $source operator."
        strict: true
        fields:
            startingPoint:
                type:
                    variant: [object, timestamp]
                # In written checkpoint data, startingPoint will always be set.
                # This is marked as optional only so the ChangeStreamSourceOperator can
                # track when a startingPoint has not yet been chosen.
                optional: true
                description: "If object: the resumeToken to start after. If timestamp: the operation time to start at."
            watermark:
                description: Event time watermark of the changestream.
                type: WatermarkState
                optional: true

    OperatorState:
        strict: true
        description: The serialized state of a single operator in a checkpoint.
        fields:
            _id:
                description: A primary key string ID that identifies the operator within a checkpoint.
                type: string
            state:
                description: Operator state in the checkpoint.
                type: object

    CheckpointOperatorInfo:
        strict: true
        description: High level information about an operator in a checkpoint, like stats.
        fields:
            operatorId:
                description: The operator's ID.
                type: int
            stats:
                description: The operator's stats at the time of checkpooint.
                type: OperatorStatsDoc

    CheckpointInfo:
        strict: true
        description: A CheckpointInfo document is written when a checkpoint is committed. Corresponding OperatorState is considered valid when this document exists.
        fields:
            _id:
                description: A string ID in the form checkpoint-{tenantId}-{streamProcessorId}-{timestamp}.
                type: string
            operatorInfo:
                description: High level information about operators in a checkpoint, like stats.
                type: array<CheckpointOperatorInfo>

    WindowOperatorStateFastMode:
        strict: true
        description: WindowOperator state when using fast mode checkpointing.
        fields:
            minimumWindowStartTime:
                type: safeInt64

    WindowOperatorStartRecord:
        strict: true
        description: The WindowAwareOperator base class writes this document to mark the start of a new window of data.
        fields:
            0:
                type: safeInt64
                cpp_name: startTimeMs
                description: Start time of the window in millis.
            1:
                type: safeInt64
                cpp_name: endTimeMs
                description: End time of the window in millis.
            2:
                type: StreamMetaSourceType
                cpp_name: sourceType
                optional: true
                description: Source type used in the StreamMeta template for the window.

    WindowOperatorEndRecord:
        strict: true
        description: The WindowAwareOperator base class writes this document to mark the end of a window of data.
        fields:
            0:
                type: safeInt64
                cpp_name: windowEndMarker
                description: Start time of the window corresponding to this window end marker.

    WindowOperatorLimitRecord:
        strict: true
        description: The WindowLimitAwareOperator class checkpoint state.
        fields:
            0:
                type: safeInt64
                cpp_name: numSent
                description: Number of documents sent so far in the limit operator.

    WindowAwareGroupRecord:
        strict: true
        description: The WindowAwareGroupOperator checkpoint state format.
        fields:
            0:
                type: bindata_generic
                description: group key
                cpp_name: groupKey
            1:
                type: bindata_generic
                description: group accumulators
                cpp_name: groupAccumulators

    # Prefer using digits as the field name with cpp_name rather than a verbose field name so that
    # we limit the size of the field name in the checkpoint data to be a single byte and avoid
    # wasting space in the case where we have many open windows.
    WindowOperatorCheckpointRecord:
        strict: true
        description: A variant type used for all WindowAwareOperator and derived class checkpoint state. Only one field will be set.
        fields:
            0:
                type: safeInt64
                description: The minimum allowed window start time. This is the first record written in all WindowAwareOperator checkpoints.
                cpp_name: minWindowStartTime
                optional: true
            1:
                type: WindowOperatorStartRecord
                description: Marks the start of a window of data.
                cpp_name: windowStart
                optional: true
            2:
                type: WindowOperatorEndRecord
                description: Marks the end of a window of data.
                cpp_name: windowEnd
                optional: true
            3:
                type:
                    variant: [object, array]
                description: An object field only used in unit testing.
                cpp_name: testOnlyData
                optional: true
            4:
                type: object
                description: A document in the window sort.
                cpp_name: sortRecord 
                optional: true 
            5:
                type: WindowOperatorLimitRecord
                description: Limit operator window state.
                cpp_name: limitRecord
                optional: true
            6:
                type: WindowAwareGroupRecord
                description: A record to save the group key and the corresponding 
                             accumulators state
                cpp_name: groupRecord
                optional: true

load("//bazel:mongo_src_rules.bzl", "idl_generator", "mongo_cc_benchmark", "mongo_cc_library")

package(default_visibility = ["//src/mongo/db/modules/enterprise:__subpackages__"])

exports_files(
    glob([
        "*.h",
        "*.cpp",
    ]),
)

# TODO: add something like InjectStreamsThirdParty('mongocxx') to make this easier.
MONGOCXX_COPTS = [
    "-isystemsrc/mongo/db/modules/enterprise/src/streams/third_party/mongocxx/dist",
] + select({
    "@platforms//cpu:x86_64": [
        "-isystemsrc/mongo/db/modules/enterprise/src/streams/third_party/mongocxx/dist/platform/linux_x86_64",
    ],
    "@platforms//cpu:aarch64": [
        "-isystemsrc/mongo/db/modules/enterprise/src/streams/third_party/mongocxx/dist/platform/linux_aarch64",
    ],
    "//conditions:default": [],
})

SASL_SYSDEP = select({
    "@platforms//os:windows": [
        "sasl2.lib",
    ],
    "//conditions:default": [
        "-lsasl2",
    ],
})

RT_SYSDEP = select({
    "@platforms//os:linux": [
        "-lrt",
    ],
    "//conditions:default": [],
})

idl_generator(
    name = "stages_gen",
    src = "stages.idl",
    deps = [
        ":common_gen",
        "//src/mongo/db:basic_types_gen",
        "//src/mongo/db/pipeline:document_source_change_stream_gen",
        "//src/mongo/db/pipeline:document_source_merge_gen",
        "//src/mongo/db/pipeline:name_expression_gen",
        "//src/mongo/db/timeseries:timeseries_gen",
    ],
)

idl_generator(
    name = "exec_internal_gen",
    src = "exec_internal.idl",
    deps = [
        ":common_gen",
        "//src/mongo/db:basic_types_gen",
        "//src/mongo/db/pipeline:value_gen",
    ],
)

idl_generator(
    name = "checkpoint_data_gen",
    src = "checkpoint_data.idl",
    deps = [
        ":exec_internal_gen",
        "//src/mongo/db:basic_types_gen",
    ],
)

idl_generator(
    name = "common_gen",
    src = "common.idl",
    deps = [
        "//src/mongo/db:basic_types_gen",
    ],
)

idl_generator(
    name = "config_gen",
    src = "config.idl",
    deps = [
        "//src/mongo/db:basic_types_gen",
    ],
)

mongo_cc_library(
    name = "streams_config_idl",
    srcs = [
        ":config_gen",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//src/mongo/db:server_base",
    ],
)

mongo_cc_library(
    name = "streams_exec_common_idl",
    srcs = [
        ":common_gen",
    ],
    deps = [
        "//src/mongo:base",
        "//src/mongo/client:clientdriver_minimal",
        "//src/mongo/idl:idl_parser",
    ],
)

mongo_cc_library(
    name = "streams_exec_internal_idl",
    srcs = [
        "checkpoint_data_gen",
        "exec_internal_gen",
    ],
    no_undefined_ref_DO_NOT_USE = False,
    deps = [
        "//src/mongo:base",
        "//src/mongo/client:clientdriver_minimal",
        "//src/mongo/idl:idl_parser",
    ],
)

mongo_cc_library(
    name = "streams_stages_idl",
    srcs = [
        "stages_gen",
    ],
    no_undefined_ref_DO_NOT_USE = False,
    deps = [
        "//src/mongo:base",
        "//src/mongo/client:clientdriver_minimal",
        "//src/mongo/db/pipeline:aggregation_request_helper",
        "//src/mongo/db/pipeline:document_sources_idl",
        "//src/mongo/idl:idl_parser",
    ],
)

mongo_cc_library(
    name = "streams_exec_util",
    srcs = [
        "document_timestamp_extractor.cpp",
        "event_deserializer.cpp",
        "json_event_deserializer.cpp",
        "source_buffer_manager.cpp",
    ],
    hdrs = [
        "document_timestamp_extractor.h",
        "event_deserializer.h",
        "json_event_deserializer.h",
        "mongocxx_utils.h",
        "source_buffer_manager.h",
        ":stages_gen",
    ],
    copts = MONGOCXX_COPTS,
    deps = [
        "//src/mongo:base",
        "//src/mongo/db:query_expressions",
        "//src/mongo/db/modules/enterprise/src/streams/third_party/mongocxx",
        "//src/mongo/db/modules/enterprise/src/streams/util:streams_util",
        "//src/third_party/libbson:bson",
    ],
)

mongo_cc_library(
    name = "streams_operators",
    srcs = [
        "aws_util.cpp",
        "change_stream_source_operator.cpp",
        "checkpoint_coordinator.cpp",
        "checkpoint_storage.cpp",
        "collect_operator.cpp",
        "concurrent_checkpoint_monitor.cpp",
        "connection_collection.cpp",
        "connection_status.cpp",
        "context.cpp",
        "dead_letter_queue.cpp",
        "delayed_watermark_generator.cpp",
        "document_source_external_function_stub.cpp",
        "document_source_feeder.cpp",
        "document_source_https_stub.cpp",
        "document_source_remote_db_cursor.cpp",
        "document_source_validate_stub.cpp",
        "document_source_window_stub.cpp",
        "documents_data_source_operator.cpp",
        "executor.cpp",
        "external_function.cpp",
        "external_function_operator.cpp",
        "external_function_sink_operator.cpp",
        "fake_kafka_partition_consumer.cpp",
        "feature_flag.cpp",
        "generated_data_source_operator.cpp",
        "group_operator.cpp",
        "group_processor.cpp",
        "https_operator.cpp",
        "in_memory_dead_letter_queue.cpp",
        "in_memory_sink_operator.cpp",
        "in_memory_source_operator.cpp",
        "kafka_callback_base.cpp",
        "kafka_connect_auth_callback.cpp",
        "kafka_consumer_operator.cpp",
        "kafka_emit_operator.cpp",
        "kafka_event_callback.cpp",
        "kafka_partition_consumer.cpp",
        "kafka_partition_consumer_base.cpp",
        "kafka_resolve_callback.cpp",
        "kafka_utils.cpp",
        "latency_collector.cpp",
        "limit_operator.cpp",
        "log_dead_letter_queue.cpp",
        "log_sink_operator.cpp",
        "log_util.cpp",
        "lookup_operator.cpp",
        "match_operator.cpp",
        "memory_usage_monitor.cpp",
        "merge_operator.cpp",
        "message.cpp",
        "mongocxx_utils.cpp",
        "mongodb_dead_letter_queue.cpp",
        "mongodb_process_interface.cpp",
        "operator.cpp",
        "operator_dag.cpp",
        "optimize.cpp",
        "output_sampler.cpp",
        "pipeline_rewriter.cpp",
        "planner.cpp",
        "queued_sink_operator.cpp",
        "rate_limiter.cpp",
        "redact_operator.cpp",
        "s3_emit_operator.cpp",
        "sample_data_source_operator.cpp",
        "session_window_assigner.cpp",
        "single_document_transformation_operator.cpp",
        "sink_operator.cpp",
        "sort_operator.cpp",
        "source_operator.cpp",
        "stats_utils.cpp",
        "stream_processor_feature_flags.cpp",
        "stream_stats.cpp",
        "tenant_feature_flags.cpp",
        "timeseries_emit_operator.cpp",
        "unflushed_state_container.cpp",
        "unwind_operator.cpp",
        "util.cpp",
        "validate_operator.cpp",
        "watermark_combiner.cpp",
        "watermark_generator.cpp",
        "window_assigner.cpp",
        "window_aware_operator.cpp",
        "//src/mongo/db/modules/enterprise/src/streams/exec/checkpoint:checkpoint_restorer.cpp",
        "//src/mongo/db/modules/enterprise/src/streams/exec/checkpoint:file_util.cpp",
        "//src/mongo/db/modules/enterprise/src/streams/exec/checkpoint:local_disk_checkpoint_storage.cpp",
        "//src/mongo/db/modules/enterprise/src/streams/exec/checkpoint:manifest_builder.cpp",
        "//src/mongo/db/modules/enterprise/src/streams/exec/checkpoint:replay_checkpoint_restorer.cpp",
    ],
    hdrs = [
        "add_fields_operator.h",
        "aws_util.h",
        "change_stream_source_operator.h",
        "checkpoint_coordinator.h",
        "checkpoint_storage.h",
        "collect_operator.h",
        "concurrent_checkpoint_monitor.h",
        "connection_collection.h",
        "connection_status.h",
        "constants.h",
        "context.h",
        "dead_letter_queue.h",
        "delayed_watermark_generator.h",
        "document_source_external_function_stub.h",
        "document_source_feeder.h",
        "document_source_https_stub.h",
        "document_source_remote_db_cursor.h",
        "document_source_validate_stub.h",
        "document_source_window_stub.h",
        "documents_data_source_operator.h",
        "executor.h",
        "external_function.h",
        "external_function_operator.h",
        "external_function_sink_operator.h",
        "fake_kafka_partition_consumer.h",
        "feature_flag.h",
        "feedable_pipeline.h",
        "generated_data_source_operator.h",
        "group_operator.h",
        "group_processor.h",
        "https_operator.h",
        "in_memory_dead_letter_queue.h",
        "in_memory_sink_operator.h",
        "in_memory_source_operator.h",
        "kafka_callback_base.h",
        "kafka_connect_auth_callback.h",
        "kafka_consumer_operator.h",
        "kafka_emit_operator.h",
        "kafka_event_callback.h",
        "kafka_partition_consumer.h",
        "kafka_partition_consumer_base.h",
        "kafka_resolve_callback.h",
        "kafka_utils.h",
        "latency_collector.h",
        "limit_operator.h",
        "log_dead_letter_queue.h",
        "log_sink_operator.h",
        "log_util.h",
        "lookup_operator.h",
        "match_operator.h",
        "memory_usage_monitor.h",
        "merge_operator.h",
        "message.h",
        "mongo_process_interface_for_test.h",
        "mongocxx_utils.h",
        "mongodb_dead_letter_queue.h",
        "mongodb_process_interface.h",
        "noop_dead_letter_queue.h",
        "noop_sink_operator.h",
        "operator.h",
        "operator_dag.h",
        "optimize.h",
        "output_sampler.h",
        "pipeline_rewriter.h",
        "planner.h",
        "project_operator.h",
        "queued_sink_operator.h",
        "rate_limiter.h",
        "redact_operator.h",
        "replace_root_operator.h",
        "restored_checkpoint_info.h",
        "s3_emit_operator.h",
        "sample_data_source_operator.h",
        "session_window_assigner.h",
        "set_operator.h",
        "single_document_transformation_operator.h",
        "sink_operator.h",
        "sleeper.h",
        "sort_operator.h",
        "source_operator.h",
        "stats_utils.h",
        "stream_processor_feature_flags.h",
        "stream_stats.h",
        "tenant_feature_flags.h",
        "test_constants.h",
        "timeseries_emit_operator.h",
        "unflushed_state_container.h",
        "unwind_operator.h",
        "util.h",
        "validate_operator.h",
        "watermark_combiner.h",
        "watermark_generator.h",
        "window_assigner.h",
        "window_aware_operator.h",
        "//src/mongo/db:change_stream_options_gen",
        "//src/mongo/db/modules/enterprise/src/streams/commands:stream_ops_gen",
        "//src/mongo/db/modules/enterprise/src/streams/exec/checkpoint:checkpoint_restorer.h",
        "//src/mongo/db/modules/enterprise/src/streams/exec/checkpoint:file_util.h",
        "//src/mongo/db/modules/enterprise/src/streams/exec/checkpoint:local_disk_checkpoint_storage.h",
        "//src/mongo/db/modules/enterprise/src/streams/exec/checkpoint:manifest_builder.h",
        "//src/mongo/db/modules/enterprise/src/streams/exec/checkpoint:replay_checkpoint_restorer.h",
        "//src/mongo/db/modules/enterprise/src/streams/exec/checkpoint:restorer.h",
        "//src/mongo/db/pipeline:aggregation_context_fixture.h",
        "//src/mongo/db/pipeline:document_source_mock.h",
        "//src/mongo/db/pipeline:document_source_mock_stages.h",
        "//src/mongo/db/query:query_test_service_context.h",
    ],
    copts = MONGOCXX_COPTS,
    tags = ["compile_requires_large_memory_gcc"],
    deps = [
        "streams_config_idl",
        "streams_exec_common_idl",
        "streams_exec_internal_idl",
        "streams_exec_util",
        "streams_stages_idl",
        "//src/mongo/crypto:symmetric_crypto",
        "//src/mongo/db:query_exec",
        "//src/mongo/db:server_base",
        "//src/mongo/db/modules/enterprise/src/streams/third_party/mongocxx",
        "//src/mongo/db/modules/enterprise/src/streams/util:streams_util",
        "//src/mongo/db/pipeline/process_interface:common_process_interface",
        "//src/third_party/aws-sdk",
        "//src/third_party/librdkafka:rdkafka",
        "//src/third_party/librdkafka:rdkafka++",
    ],
)

mongo_cc_benchmark(
    name = "streams_operator_dag_bm",
    srcs = [
        "operator_dag_bm.cpp",
    ],
    copts = MONGOCXX_COPTS,
    linkopts = SASL_SYSDEP + RT_SYSDEP,
    tags = ["compile_requires_large_memory_gcc"],
    deps = [
        "streams_operators",
        "//src/mongo:base",
        "//src/mongo/db:service_context_non_d",
        "//src/mongo/db:service_context_test_fixture",
        "//src/mongo/db/auth:authmocks",
        "//src/mongo/db/exec/document_value",
        "//src/mongo/db/exec/document_value:document_value_test_util",
        "//src/mongo/db/modules/enterprise/src/streams/exec/tests:streams_test_utils",
        "//src/mongo/db/query:query_test_service_context",
    ],
)

mongo_cc_benchmark(
    name = "streams_window_operator_bm",
    srcs = [
        "window_operator_bm.cpp",
    ],
    copts = MONGOCXX_COPTS,
    linkopts = SASL_SYSDEP + RT_SYSDEP,
    deps = [
        "streams_operators",
        "//src/mongo:base",
        "//src/mongo/db:service_context_non_d",
        "//src/mongo/db:service_context_test_fixture",
        "//src/mongo/db/exec/document_value",
        "//src/mongo/db/modules/enterprise/src/streams/exec/tests:streams_test_utils",
    ],
)

mongo_cc_benchmark(
    name = "streams_session_window_stress_bm",
    srcs = [
        "session_window_stress_bm.cpp",
    ],
    copts = MONGOCXX_COPTS,
    linkopts = SASL_SYSDEP + RT_SYSDEP,
    deps = [
        "streams_operators",
        "//src/mongo:base",
        "//src/mongo/db:service_context_non_d",
        "//src/mongo/db:service_context_test_fixture",
        "//src/mongo/db/exec/document_value",
        "//src/mongo/db/modules/enterprise/src/streams/exec/tests:streams_test_utils",
    ],
)

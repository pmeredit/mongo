# Copyright (C) 2022-present MongoDB, Inc. and subject to applicable commercial license.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"
    cpp_includes:
        - "mongo/db/pipeline/aggregation_request_helper.h"

imports:
    - "mongo/db/basic_types.idl"
    - "mongo/db/modules/enterprise/src/streams/exec/common.idl"
    - "mongo/db/modules/enterprise/src/streams/exec/stages.idl"
    - "mongo/db/modules/enterprise/src/streams/exec/exec_internal.idl"
    - "mongo/db/query/client_cursor/cursor_response.idl"

enums:
    StreamStatus:
        description: "Stream status"
        type: string
        values:
            # streamProcessor is created.
            Created: "created"
            # streamProcessor is running.
            Running: "running"
            # streamProcessor has encountered an error and is no longer running.
            Error: "error"
            # streamProcessor is stopping, after which it will be removed from memory.
            Stopping: "stopping"

structs:
    StreamError:
        description: Error code and reason.
        strict: false
        fields:
            code:
                description: Error code.
                type: int
            reason:
                description: Error reason.
                type: string
            retryable:
                description: If this error is retryable
                type: bool
            userError:
                description: True if this error is a user error.
                type: bool

    # This struct is meant for user-facing commands only, and the field names in this struct are
    # based on the product spec.
    VerboseOperatorStats:
        description: Per-operator stats.
        strict: false
        fields:
            name:
                description: Name of the operator.
                type: string
            inputMessageCount:
                description: Total number of input messages read, including messages that were rejected.
                type: safeInt64
            inputMessageSize:
                description: Total number of input bytes read, including docs that were rejected.
                type: safeDouble
            outputMessageCount:
                description: Total number of output messages emitted.
                type: safeInt64
            outputMessageSize:
                description: Total number of output bytes emitted.
                type: safeDouble
            dlqMessageCount:
                description: Total number of input messages that were rejected and sent to the dead letter queue.
                type: safeInt64
            dlqMessageSize:
                description: Total number of bytes sent to the dead letter queue.
                type: safeDouble
            stateSize:
                description: Total state size of the operator.
                type: safeDouble
            maxMemoryUsage:
                description: Max memory usage of the operator thus far.
                type: safeDouble
            executionTimeMillis:
                description: Total execution time of the operator (in seconds).
                type: milliseconds 
            timeSpentMillis:
                description: Total timeSpent in the operator (in milliseconds)
                type: milliseconds
                optional: true
            minOpenWindowStartTime:
                description: The start time of the min open window. Only set for window assigning operators.
                type: date
                optional: true
            maxOpenWindowStartTime:
                description: The start time of the max open window. Only set for window assigning operators.
                type: date
                optional: true
            connectionType:
                description: Type of connection used by the operator. Only included if the 'isInternal' flag is set.
                type: ConnectionType
                optional: true

    StartStreamProcessorReply:
        description: "Response message for streams_startStreamProcessor command"
        strict: false
        is_command_reply: true
        fields:
            sampleCursorId:
                description: "The sample cursor id if the stream processor was started atomically with a sampling session."
                type: long
                stability: stable
                optional: true
            connections:
                description: "The connection information from the supplied pipeline if the 'parseOnly' flag is set."
                type: array<ParsedConnectionInfo>
                stability: stable
                optional: true
            optimizedPipeline:
                description: "Optimized pipeline"
                type: pipeline
                optional: true

    KafkaConsumerPartitionState:
        description: "State of a single partition in the kafka consumer source"
        strict: false
        fields:
            topic:
                description: "Topic that this consumer is subscribed to."
                type: string
                optional: true
            partition:
                description: "Partition ID that this state represents."
                type: safeInt
            currentOffset:
                description: >
                    The offset that the stream processor is currently on for this partition. This is
                    the last offset that was processed by the stream processor plus one.
                type: safeInt64
            checkpointOffset:
                description: >
                    The offset that the stream processor last committed to the kafka broker and checkpoint
                    for this partition.
                type: safeInt64
            partitionOffsetLag:
                description: >
                    The lag between the current offset and the latest offset at the broker for this topic/partition.
                type: safeInt64
                optional: true
            watermark:
                description: Watermark timestamp for the partition.
                type: date
                optional: true
            isIdle:
                description: Set to true if the partition is idle.
                type: bool
                default: false

    GetStatsReply:
        description: "Response message for streams_getStats command"
        strict: false
        is_command_reply: true
        fields:
            name:
                description: Name of the stream processor.
                type: string
            processorId:
                description: "Unique stream processor id."
                type: string
            status:
                description: Status of the stream processor.
                type: StreamStatus
            scaleFactor:
                description: Scaling applies to size fields.
                type: safeInt64
            inputMessageCount:
                description: Total number of input messages read, including docs that were rejected.
                type: safeInt64
            inputMessageSize:
                description: Total number of input bytes read, including messages that were rejected.
                type: safeDouble
            outputMessageCount:
                description: Total number of output messages emitted.
                type: safeInt64
            outputMessageSize:
                description: Total number of output bytes emitted.
                type: safeDouble
            dlqMessageCount:
                description: Total number of messages that were sent to the DLQ
                type: safeInt64
            dlqMessageSize:
                description: Total number of bytes sent to the DLQ
                type: safeDouble
            stateSize:
                description: Number of bytes that the window operators are using to store state.
                type: safeDouble
            memoryTrackerBytes:
                description: Number of bytes used by the worker.
                type: safeDouble
            operatorStats:
                description: Stats broken down by operator. This is only populated when requesting for stats in verbose mode.
                type: array<VerboseOperatorStats>
                optional: true
            watermark:
                description: watermark timestamp.
                type: date
                optional: true
            kafkaConsumerGroup:
                description: ID of the Kafka consumer group.
                type: string
                optional: true
            kafkaPartitions:
                description: >
                    Only applicable to stream processors using a kafka source. This contains the current state of each
                    partition for the kafka source.
                type: array<KafkaConsumerPartitionState>
                optional: true
            kafkaTotalOffsetLag:
                description: >
                    Only applicable to stream processors using a kafka source. This is the sum of all the partition lags.
                type: safeInt64
                optional: true
            changeStreamState:
                type:
                    variant: [object, timestamp]
                optional: true
                description: >
                    This is last read resume token or startAtOperationTimestamp if we have not read anything if 
                    the source is change stream."
            changeStreamTimeDifferenceSecs:
                description: >
                    This is the lag (in seconds) of the last read change event as compared with the last event in the oplog.
                    If all available events have been read, then lag becomes 0
                type: seconds
                optional: true

    StopStreamProcessorReply:
        description: "Response message for streams_stopStreamProcessor command"
        strict: false
        is_command_reply: true
        fields:
            stats:
                description: "The final stats for the processor after it stopped."
                type: GetStatsReply

    WriteStreamCheckpointReply:
        description: "Response message for streams_WriteCheckpoint command"
        is_command_reply: true

    VerboseStatus:
        description: "Internal details about a stream processor, used for debugging purposes."
        strict: false
        fields:
            stats:
                description: "The stats of the stream processor."
                type: GetStatsReply
            isCheckpointingEnabled:
                description: "True if checkpointing is enabled on this stream processor."
                type: bool
            restoredCheckpoint:
                description: "A description of the checkpoint this stream processor restored from, if one exists."
                type: CheckpointDescription
                optional: true
            lastCommittedCheckpoint:
                description: "A description of the last checkpoint this stream processor committed and flushed to remote storage, if one exists."
                type: CheckpointDescription
                optional: true

    ListStreamProcessorsReplyItem:
        description: "An item in the response message for streams_listStreamProcessors command"
        strict: false
        fields:
            ns:
                description: "Namespace of the stream processor."
                type: namespacestring
            tenantId:
                description: "Tenant id that this stream processor belongs to."
                type: string
            processorId:
                description: "Unique stream processor id."
                type: string
            name:
                description: "Name of the stream processor."
                type: string
            startedAt:
                description: "Time at which the stream processor was started."
                type: date
            status:
                description: "Status of the stream processor"
                type: StreamStatus
            pipeline:
                description: "An unparsed version of the pipeline."
                type: pipeline
            error:
                description: "Error information for a streamProcessor in an 'error' status."
                type: StreamError
                optional: true
            verboseStatus:
                description: "Verbose status of the stream processor. Only returned if verbose: true is passed in the listStreamProcessors request."
                type: VerboseStatus
                optional: true

    ListStreamProcessorsReply:
        description: "Response message for streams_listStreamProcessors command"
        strict: false
        is_command_reply: true
        fields:
            streamProcessors:
                description: "List of stream processors."
                type: array<ListStreamProcessorsReplyItem>

    StartStreamSampleReply:
        description: "Response message for streams_startStreamSample command"
        strict: false
        is_command_reply: true
        fields:
            name:
                description: "Name of the stream processor."
                type: string
            id:
                cpp_name: "cursorId"
                description: "The cursor id of the cursor."
                type: long
                stability: stable

    GetMetricsReply:
        description: "Response message for streams_getMetrics command"
        strict: false
        is_command_reply: true
        fields:
            counters:
                description: "List of Counters."
                type: array<CounterMetricValue>
                optional: true
            gauges:
                description: "List of Gauges."
                type: array<GaugeMetricValue>
                optional: true
            histograms:
                description: "List of Histograms."
                type: array<HistogramMetricValue>
                optional: true

#        description: "Response message for streams_dumpStackTraces command"
#        is_command_reply: true

    UpdateFeatureFlagsReply:
        description: "Response message for UpdateFeatureFlagsCommand."
        is_command_reply: true

    UpdateConnectionReply:
        description: "Response message for UpdateConnections."
        is_command_reply: true

    CheckpointFlushedReply:
        description: "Response message for SendEventCommand's for checkpoint flush events."
        strict: false
        fields:
            stats:
                description: "The stats for the processor during the sendEvent call. Set in response to checkpoint flush sendEvent calls."
                type: GetStatsReply

    SendEventReply:
        description: "Response message for SendEventCommand."
        is_command_reply: true
        fields:
            checkpointFlushedEventReply:
                description: "Reply to a checkpointFlushedEvent."
                type: CheckpointFlushedReply
                optional: true

    GetFeatureFlagsReply:
        description: "Response message for GetFeatureFlagsCommand."
        is_command_reply: true
        fields:
            featureFlags:
                description: "Feature flags bson object."
                type: object
                optional: true

    MongoDLQOptions:
        description: "Connection information for the dead letter queue."
        strict: false
        fields:
            connectionName:
                description: "Connection name from connection registry."
                type: string
            db:
                description: "Database name."
                type: string
            coll:
                description: "Collection name."
                type: string

    CheckpointStorageOptions:
        description: "Connection information for checkpoint storage."
        strict: false
        fields:
            uri:
                description: "Atlas connection URI."
                type: string
            db:
                description: "Database name."
                type: string
            coll:
                description: "Collection name."
                type: string
            pemFile:
                description: "Path to PEM file for authentication to an Atlas cluster."
                type: string
                optional: true
            caFile:
                description: "Path to CA file for verifying the PEM file above."
                type: string
                optional: true

    LocalDiskStorageOptions:
        description: "Local disk checkpointing storage options. When set, mongostreams expects the streams Agent to upload checkpoint files to cloud storage."
        strict: false
        fields:
            writeDirectory:
                description: "mongostreams will write new checkpoints in this directory."
                type: string
            restoreDirectory:
                description: "If set, mongostreams expects the restore checkpoint files to be downloaded to this directory."
                type: string
                optional: true

    CheckpointOptions:
        description: "Configuration options for checkpointing."
        strict: false
        fields:
            localDisk:
                type: LocalDiskStorageOptions
                description: "If set, checkpointing uses local disk and expects the streams Agent to upload checkpoint files to cloud storage."
            debugOnlyIntervalMs:
                description: "Checkpoint interval in milliseconds. Should only be used for debugging or testing. A default interval is chosen based on the pipeline."
                type: safeInt64
                validator: { gte: 0 }
                optional: true

    StartOptions:
        description: "Extra options supplied to a streamProcessor during start."
        strict: false
        fields:
            dlq:
                description: "DLQ connection information."
                type: MongoDLQOptions
                optional: true
            ephemeral:
                description: "If true, the streamProcessor is ephemeral and likely created as part of a process command from the client. A sink is not required in ephemeral pipelines."
                type: bool
                optional: true
            checkpointOptions:
                description: "Checkpoint options. These options are supplied by the service components, they are not exposed to the end customer."
                type: CheckpointOptions
                optional: true
            resumeFromCheckpointAfterModify:
                description: If true, after a modify pipeline operation, resume from the restore checkpoint written by the old pipeline. If false, only the summary stats are used from the restore checkpoint.
                type: bool
                default: true
            validateOnly:
                description: If true, the command will parse and set the streamProcessor, but not start it.
                             The command will not output anything to the external connections in the streamProcessor definition.
                type: bool
                default: false
            enableDataFlow:
                description: "Whether to let data flow through the Operator DAG after it is started."
                type: bool
                default: true
            shouldStartSample:
                description: "If true, a sample session is started and the cursor ID is retured in the command response."
                type: bool
                default: false
            featureFlags:
                description: "Bson object containing all feature flags for this stream processor. These options are supplied by service components."
                type: object
            checkpointOnStart:
                description: "By default, a checkpoint is written at start only when the SP is not being restored from a checkpoint. If this option is set to true, a checkpoint is always written upon starting and before any data processing happens."
                type: bool
                default: false
            parseOnly:
                description: If true, the command will parse the incoming command, but not validate nor start it. It returns a list of connection names.
                type: bool
                default: false

    CheckpointFlushedEvent:
        description: "The streams Agent sends this after it uploads a checkpoint to remote storage."
        strict: false
        fields:
            checkpointId:
                description: The ID of the checkpoint that was flushed to remote storage.
                type: safeInt64

commands:
    streams_startStreamProcessor:
        description: "Command to start a stream processor"
        strict: false
        cpp_name: StartStreamProcessorCommand
        command_name: streams_startStreamProcessor
        api_version: ""
        namespace: ignored
        reply_type: StartStreamProcessorReply
        access_check:
            none: true
        fields:
            tenantId:
                description: "Tenant id."
                type: string
            projectId:
                description: "Project id."
                type: string
                optional: true
            name:
                description: "Stream processor name."
                type: string
            processorId:
                description: "Stream processor id."
                type: string
            pipeline:
                description: "An unparsed version of the pipeline."
                type: pipeline
            connections:
                description: "Array of information on named connections referenced in the pipeline."
                type: array<Connection>
            correlationId:
                description: "Correlation ID for the request that ties it to a user initiated operation."
                type: string
                optional: true
            options:
                description: "Additional options supplied to the streamProcessor, such as DLQ information."
                type: StartOptions
            timeout:
                description: Maximum processing time permitted for this command.
                type: seconds 
                default: 180
            instanceName:
                description: "Instance name."
                type: string
                optional: true
            pipelineVersion:
                description: "Pipeline version. Starts at zero and incremented after the user performs a modify operation."
                type: int
                default: 0

    streams_stopStreamProcessor:
        description: "Command to stop a stream processor"
        strict: false
        cpp_name: StopStreamProcessorCommand
        command_name: streams_stopStreamProcessor
        api_version: ""
        namespace: ignored
        reply_type: StopStreamProcessorReply
        access_check:
            none: true
        fields:
            tenantId:
                description: "Tenant id."
                type: string
            name:
                description: "Name of the stream processor."
                type: string
            processorId:
                description: "Unique stream processor id."
                type: string
                optional: true
            correlationId:
                description: "Correlation ID for the request that ties it to a user initiated operation."
                type: string
                optional: true
            timeout:
                description: Maximum processing time permitted for this command.
                type: seconds 
                default: 180
            checkpointOnStop:
                description: "By default, a checkpoint is written when a stream processor is stopped. If this option is set to false, the checkpoint is skipped."
                type: bool
                default: true

    streams_listStreamProcessors:
        description: "Command to list stream processors"
        strict: false
        cpp_name: ListStreamProcessorsCommand
        command_name: streams_listStreamProcessors
        api_version: ""
        namespace: ignored
        reply_type: ListStreamProcessorsReply
        access_check:
            none: true
        fields:
            tenantId:
                description: "Tenant id."
                type: string
                optional: true
            correlationId:
                description: "Correlation ID for the request that ties it to a user initiated operation."
                type: string
                optional: true
            verbose:
                description: "If true, more details are returned about each stream processor."
                type: bool
                default: false
            processorId:
                description: "If set, list specific stream processor."
                type: string
                optional: true

    streams_writeCheckpoint:
        description: "Request a stream processor to write a checkpoint"
        cpp_name: WriteStreamCheckpointCommand
        command_name: streams_writeCheckpoint
        api_version: ""
        namespace: ignored
        reply_type: WriteStreamCheckpointReply
        access_check:
            none: true
        fields:
            tenantId:
                description: "Tenant id."
                type: string
            name:
                description: "Stream processor name."
                type: string
            processorId:
                description: "Stream processor id."
                type: string
                optional: true
            force:
                description: "Should a checkpoint be taken even if nothing has changed since last checkpoint"
                type: bool
                default: false
            correlationId:
                description: "Correlation ID for the request that ties it to a user initiated operation."
                type: string
                optional: true

    streams_startStreamSample:
        description: "Command to start a stream sample"
        strict: false
        cpp_name: StartStreamSampleCommand
        command_name: streams_startStreamSample
        api_version: ""
        namespace: ignored
        reply_type: StartStreamSampleReply
        access_check:
            none: true
        fields:
            tenantId:
                description: "Tenant id."
                type: string
            name:
                description: "Name of the stream processor."
                type: string
            processorId:
                description: "Unique stream processor id."
                type: string
                optional: true
            limit:
              description: "The maximum number of documents to return."
              type: safeInt
              optional: true
              validator: { gt: 0 }
            correlationId:
                description: "Correlation ID for the request that ties it to a user initiated operation."
                type: string
                optional: true

    streams_getMoreStreamSample:
        cpp_name: GetMoreStreamSampleCommand
        strict: false
        command_name: streams_getMoreStreamSample
        description: "Command to get the next batch of output documents from a stream sample"
        api_version: ""
        namespace: type
        type: long
        reply_type: CursorGetMoreReply
        access_check:
            none: true
        fields:
            tenantId:
                description: "Tenant id."
                type: string
            name:
                description: "Name of the stream processor."
                type: string
            processorId:
                description: "Unique stream processor id."
                type: string
                optional: true
            batchSize:
                description: >
                    The batch size is optional. If not provided, we will put as many documents into the batch
                    as fit within the byte limit.
                type: safeInt
                default: 100
                validator: {gt: 0}
            correlationId:
                description: "Correlation ID for the request that ties it to a user initiated operation."
                type: string
                optional: true

    streams_getStats:
        description: "Command to get stats"
        strict: false
        cpp_name: GetStatsCommand
        command_name: streams_getStats
        api_version: ""
        namespace: ignored
        reply_type: GetStatsReply
        access_check:
            none: true
        fields:
            tenantId:
                description: "Tenant id."
                type: string
            name:
                description: "Name of the stream processor."
                type: string
            processorId:
                description: "Unique stream processor id."
                type: string
                optional: true
            scale:
                description: Divisor to apply to all size fields.
                type: safeInt64
                default: 1
                validator: { gt: 0 }
            verbose:
                description: Returns per-operator stats in the stream pipeline.
                type: bool
                default: false
            correlationId:
                description: "Correlation ID for the request that ties it to a user initiated operation."
                type: string
                optional: true
            isInternal:
                description: Returns per-operator stats that are needed for internal use only.
                type: bool
                default: false

    streams_testOnlyInsert:
        description: "Test-only command to insert a document into a stream processor"
        strict: false
        cpp_name: TestOnlyInsertCommand
        command_name: streams_testOnlyInsert
        api_version: ""
        namespace: ignored
        reply_type: OkReply
        access_check:
            none: true
        fields:
            tenantId:
                description: "Tenant id."
                type: string
            name:
                description: "Name of the stream processor."
                type: string
            processorId:
                description: "Unique stream processor id."
                type: string
                optional: true
            documents:
                description: "An array of one or more documents to insert."
                type: array<object>

    streams_getMetrics:
        description: "Command to get observability metrics"
        strict: false
        cpp_name: GetMetricsCommand
        command_name: streams_getMetrics
        api_version: ""
        namespace: ignored
        reply_type: GetMetricsReply
        access_check:
            none: true
        fields:
            externalMetrics:
                description: Returns customer visible metrics only.
                type: bool
                default: false

#    streams_dumpStackTraces:
#        description: "Command to get mongostreams to log a stack trace of all threads. This command currently has some issues and so must be used only as a last resort means."
#        strict: false
#        cpp_name: DumpStackTracesCommand
#        command_name: streams_dumpStackTraces
#        api_version: ""
#        namespace: ignored
#        reply_type: DumpStackTracesReply
#        access_check:
#            none: true

    streams_sendEvent:
        description: "Called by the streams Agent to notify mongostream of an important event."
        strict: false
        cpp_name: SendEventCommand
        command_name: streams_sendEvent
        api_version: ""
        namespace: ignored
        reply_type: SendEventReply
        access_check:
            none: true
        fields:
            tenantId:
                description: "Tenant id."
                type: string
            processorId:
                description: "Unique stream processor id."
                type: string
            checkpointFlushedEvent:
                description: "A checkpoint flushed event."
                type: CheckpointFlushedEvent
                optional: true
            dumpStackTrace:
                description: "Get mongostreams to log stack trace of all threads"
                type: bool
                optional: true

    streams_updateFeatureFlags:
        description: "Update feature flags for the stream processing instance."
        cpp_name: UpdateFeatureFlagsCommand
        command_name: streams_updateFeatureFlags
        api_version: ""
        namespace: ignored
        reply_type: UpdateFeatureFlagsReply
        fields:
            tenantId:
                description: "Tenant id."
                type: string
            featureFlags:
                description: "Bson object containing all feature flags for this instance."
                type: object
        access_check:
            none: true

    streams_updateConnection:
        description: "Command to update connection details for stream processors running"
        cpp_name: UpdateConnectionCommand
        command_name: streams_updateConnection
        api_version: ""
        namespace: ignored
        reply_type: UpdateConnectionReply
        fields:
            tenantId:
                description: "Tenant id."
                type: string
            processorName:
                description: "Name of the stream processor."
                type: string
            processorId:
                description: "Unique stream processor id."
                type: string
            connection:
                description: "Connection to be updated."
                type: Connection

    streams_testOnlyGetFeatureFlags:
        description: "get feature flags for the stream processing instance"
        cpp_name: GetFeatureFlagsCommand
        command_name: streams_testOnlyGetFeatureFlags
        api_version: ""
        namespace: ignored
        reply_type: GetFeatureFlagsReply
        fields:
            tenantId:
                description: "Tenant id."
                type: string
            name:
                description: "Name of the stream processor."
                type: string
        access_check:
            none: true

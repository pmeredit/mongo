# Copyright (C) 2022-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"
    cpp_includes:
        - "mongo/db/pipeline/aggregation_request_helper.h"

imports:
    - "mongo/db/basic_types.idl"
    - "mongo/db/modules/enterprise/src/streams/exec/connection.idl"
    - "mongo/db/query/cursor_response.idl"

types:
    pipeline:
        bson_serialization_type: any
        description: "An array of objects specifying the aggregation pipeline."
        cpp_type: "std::vector<mongo::BSONObj>"
        deserializer: ::mongo::parsePipelineFromBSON

structs:
    StartStreamProcessorReply:
        description: "Result of starting a stream processor"
        is_command_reply: true

    StartStreamSampleReply:
        description: "Result of starting a stream processor"
        is_command_reply: true
        fields:
            name:
                description: "Name of the stream processor."
                type: string
            id:
                cpp_name: "cursorId"
                description: "The cursor id of the cursor."
                type: long
                stability: stable

commands:
    _startStreamProcessor:
        description: "Command to start a stream processor"
        cpp_name: StartStreamProcessorCommand
        command_name: _startStreamProcessor
        api_version: ""
        namespace: ignored
        reply_type: StartStreamProcessorReply
        access_check:
            none: true
        fields:
            name:
                description: "Name of the stream processor."
                type: string
            pipeline:
                description: "An unparsed version of the pipeline."
                type: pipeline
            connections:
                description: "Array of information on named connections referenced in the pipeline."
                type: array<Connection>

    _startStreamSample:
        description: "Command to start a stream sample"
        cpp_name: StartStreamSampleCommand
        command_name: streams_startStreamSample
        api_version: ""
        namespace: ignored
        reply_type: StartStreamSampleReply
        access_check:
            none: true
        fields:
            name:
                description: "Name of the stream processor."
                type: string

    _getMoreStreamSample:
        cpp_name: GetMoreStreamSampleCommand
        command_name: streams_getMoreStreamSample
        description: "Command to get the next batch of output documents from a stream sample"
        strict: true
        api_version: ""
        namespace: type
        type: long
        reply_type: CursorGetMoreReply
        access_check:
            none: true
        fields:
            name:
                description: "Name of the stream processor."
                type: string
            batchSize:
                description: >
                    The batch size is optional. If not provided, we will put as many documents into the batch
                    as fit within the byte limit.
                type: safeInt64
                default: 100
                validator: {gte: 0}

    _testOnlyInsert:
        description: "Test-only command to insert a document into a stream processor"
        cpp_name: TestOnlyInsertCommand
        command_name: streams_testOnlyInsert
        api_version: ""
        namespace: ignored
        reply_type: OkReply
        access_check:
            none: true
        fields:
            name:
                description: "Name of the stream processor."
                type: string
            documents:
                description: "An array of one or more documents to insert."
                type: array<object>

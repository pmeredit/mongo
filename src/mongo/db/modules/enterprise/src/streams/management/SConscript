# -*- mode: python -*-

Import("env")

env = env.Clone()

env.InjectThirdParty(libraries=["librdkafka"])
env.SConscript(must_exist=1, dirs=["tests"], exports=["env"])

# TODO: add something like InjectStreamsThirdParty('mongocxx') to make this easier.
platform_name = "linux_" + env["TARGET_ARCH"]
if env.ToolchainIs("clang"):
    # This section force includes third_party/mongocxx as a clang "isystem" include.
    # We do this to avoid the headers being scanned with clang-tidy, becuase the clang-tidy
    # HeaderFilterRegex does not support exclusions.
    # TODO(SERVER-76494): Remove this workaround once clang-tidy support exclusion of header paths
    env.AppendUnique(
        CXXFLAGS=(
            "-isystem",
            env.Dir("$MONGOCXX_DIR").srcnode().abspath,
            "-isystem",
            env.Dir(f"$MONGOCXX_DIR/platform/{platform_name}").srcnode().abspath,
        )
    )
else:
    env.Append(
        CPPPATH=[
            "$MONGOCXX_DIR",
            f"$MONGOCXX_DIR/platform/{platform_name}",
        ]
    )

env.Library(
    target="streams_management",
    source=[
        "stream_manager.cpp",
        "container_stats.cpp",
        "container_group_stats_provider.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/base",
        "../commands/streams_ops_idl",
        "../exec/streams_operators",
        "../util/streams_util",
    ],
)

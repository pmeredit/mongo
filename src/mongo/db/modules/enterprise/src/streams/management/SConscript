# -*- mode: python -*-

Import('env')

env = env.Clone()

env.InjectThirdParty(libraries=['librdkafka'])
env.SConscript(dirs=['tests'], exports=['env'])

# TODO: add something like InjectStreamsThirdParty('mongocxx') to make this easier.
if env.ToolchainIs('clang'):
    # This section force includes third_party/mongocxx as a clang "isystem" include.
    # We do this to avoid the headers being scanned with clang-tidy, becuase the clang-tidy
    # HeaderFilterRegex does not support exclusions.
    # TODO(SERVER-76494): Remove this workaround once clang-tidy support exclusion of header paths
    env.AppendUnique(
        CXXFLAGS=(
            '-isystem',
            env.Dir('$BUILD_DIR/mongo/db/modules/enterprise/src/streams/third_party/mongocxx/dist').
            srcnode().abspath,
            '-isystem',
            env.Dir(
                '$BUILD_DIR/mongo/db/modules/enterprise/src/streams/third_party/mongocxx/dist/platform/linux_x86_64'
            ).srcnode().abspath,
        ))
else:
    env.Append(CPPPATH=[
        '$BUILD_DIR/mongo/db/modules/enterprise/src/streams/third_party/mongocxx/dist',
        '$BUILD_DIR/mongo/db/modules/enterprise/src/streams/third_party/mongocxx/dist/platform/linux_x86_64',
    ])

env.Library(
    target='streams_management',
    source=[
        'stream_manager.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/mongo/base',
        '../commands/streams_ops_idl',
        '../exec/streams_operators',
        '../exec/streams_parser',
        '../util/streams_util',
    ],
)

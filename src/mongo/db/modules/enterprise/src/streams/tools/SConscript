# -*- mode: python -*-

Import("env")

env = env.Clone()

env.InjectThirdParty(libraries=["librdkafka"])

# TODO: add something like InjectStreamsThirdParty('mongocxx') to make this easier.
platform_name = "linux_" + env["TARGET_ARCH"]
if env.ToolchainIs("clang"):
    # TODO(SERVER-76494): Remove this workaround once clang-tidy support exclusion of header paths
    env.AppendUnique(
        CXXFLAGS=(
            "-isystem",
            env.Dir("$MONGOCXX_DIR").srcnode().abspath,
            "-isystem",
            env.Dir(f"$MONGOCXX_DIR/platform/{platform_name}").srcnode().abspath,
        )
    )
else:
    env.Append(
        CPPPATH=[
            "$MONGOCXX_DIR",
            f"$MONGOCXX_DIR/platform/{platform_name}",
        ]
    )

env.Program(
    target="streams_pipeline_runner_main",
    source=[
        "pipeline_runner_main.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/base",
        "$BUILD_DIR/mongo/db/auth/authmocks",
        "$BUILD_DIR/mongo/db/query/query_test_service_context",
        "$BUILD_DIR/mongo/db/service_context_non_d",
        "$BUILD_DIR/mongo/db/service_context_test_fixture",
        "../exec/streams_operators",
        "../exec/tests/streams_test_utils",
    ],
    SYSLIBDEPS=[
        "sasl2",
    ],
)

env.Program(
    target="streams_merge_operator_main",
    source=[
        "merge_operator_main.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/base",
        "$BUILD_DIR/mongo/db/auth/authmocks",
        "$BUILD_DIR/mongo/db/query/query_test_service_context",
        "../exec/streams_operators",
        "../exec/tests/streams_test_utils",
    ],
    SYSLIBDEPS=[
        "sasl2",
    ],
)

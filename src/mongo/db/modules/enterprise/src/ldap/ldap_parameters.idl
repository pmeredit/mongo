# Copyright (C) 2018-present MongoDB, Inc.
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
# 
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
# 
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.

global:
  cpp_namespace: "mongo"

imports:
  - "mongo/idl/basic_types.idl"

server_parameters:
  ldapUseConnectionPool:
    description: "Whether to use connection pooling for LDAP connections"
    default: true
    set_at: startup
    cpp_vartype: bool
    cpp_varname: ldapUseConnectionPool

  ldapConnectionPoolUseLatencyForHostPriority:
    description: >
        Whether the LDAP connection pool should track and use latency when deciding the order
        of LDAP hosts to connect to
    default: true
    set_at: startup
    cpp_vartype: bool
    cpp_varname: ldapConnectionPoolUseLatencyForHostPriority

  ldapConnectionPoolMinimumConnectionsPerHost:
    description: >
        The number of connections to keep open to each LDAP host
    default: 1
    set_at: startup
    cpp_vartype: int
    cpp_varname: ldapConnectionPoolMinimumConnectionsPerHost

  ldapConnectionPoolMaximumConnectionsPerHost:
    description: >
        The maximum number of connections to keep open to each LDAP host
    default: 2
    set_at: startup
    cpp_vartype: int
    cpp_varname: ldapConnectionPoolMaximumConnectionsPerHost

  ldapConnectionPoolMaximumConnectionsInProgressPerHost:
    description: >
        The maximum number of in-progress connect operations (to prevent connection storms)
    default:
      expr: std::numeric_limits<int>::max()
    set_at: startup
    cpp_vartype: int
    cpp_varname: ldapConnectionPoolMaximumConnectionsInProgressPerHost

  ldapConnectionPoolHostRefreshIntervalMillis:
    description: >
        The amount of time (in milliseconds) between checking the health of pooled LDAP connections
    default: 60000
    set_at: startup
    cpp_vartype: int 
    cpp_varname: ldapConnectionPoolRefreshInterval

  ldapConnectionPoolIdleHostTimeoutSecs:
    description: >
        The amount of time (in seconds) after there are no requests to an LDAP server to keep
        pooled connections open to it.
    default: 300
    set_at: startup
    cpp_vartype: int
    cpp_varname: ldapConnectionPoolIdleHostTimeoutSecs

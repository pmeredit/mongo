# -*- mode: python -*-

Import([
    "env",
    "get_option",
    "version_extra",
    "version_parts",
])

env = env.Clone()

env.Library(
    target='mongoqd_main',
    source=[
        'mongoqd_main.cpp',
    ],
    LIBDEPS_PRIVATE=[
        '$BUILD_DIR/mongo/s/mongos_main',
    ],
    LIBDEPS=[
        # NOTE: This list must remain empty. Please only add to LIBDEPS_PRIVATE
    ],
)

if env.TargetOSIs('windows'):
    generatedServerManifest = env.Substfile(
        'mongoqd.manifest.in',
        SUBST_DICT=[
            ('@mongo_version_major@', version_parts[0]),
            ('@mongo_version_minor@', version_parts[1]),
            ('@mongo_version_patch@', version_parts[2]),
            ('@mongo_version_extra@', version_parts[3]),
            ('@mongo_version_extra_str@', version_extra),
        ])

    env.Alias('generated-sources', generatedServerManifest)
    env.Depends("mongoqd.res", generatedServerManifest)

env.Program(
    target='mongoqd',
    source=[
        'mongoqd.cpp',
        'tenant_to_shard_cache.cpp',
    ] + env.WindowsResourceFile("mongoqd.rc"),
    LIBDEPS=[
        '$BUILD_DIR/mongo/base',
        '$BUILD_DIR/mongo/db/service_context',
        '$BUILD_DIR/mongo/s/sharding_initialization',
        'mongoqd_main',
    ],
    AIB_COMPONENT="mongoqd",
    AIB_COMPONENTS_EXTRA=[
        "dist-test",
        "serverless",
        "serverless-test",
    ],
)

# -*- mode: python -*-

Import("env")
Import("wiredtiger")

env = env.Clone()

if not wiredtiger:
    env.FatalError("Live import/export requires WiredTiger")

wtEnv = env.Clone()
wtEnv.InjectThirdParty(libraries=['wiredtiger'])

env.SConscript(
    dirs=[
        'commands',
    ],
    exports=[
        'env',
    ],
)

env.Library(
    target='import_export_options',
    source=[
        env.Idlc('import_export_options.idl')[0],
    ],
    LIBDEPS=[
        '$BUILD_DIR/mongo/base',
        '$BUILD_DIR/mongo/idl/idl_parser',
        '$BUILD_DIR/mongo/idl/server_parameter',
    ],
)

env.Library(
    target='collection_properties',
    source=[
        env.Idlc('collection_properties.idl')[0],
    ],
    LIBDEPS=[
        '$BUILD_DIR/mongo/base',
        '$BUILD_DIR/mongo/idl/idl_parser',
    ],
)

wtEnv.Library(
    target='export_collection',
    source=[
        'export_collection.cpp'
    ],
    LIBDEPS_PRIVATE=[
        '$BUILD_DIR/mongo/base',
        '$BUILD_DIR/mongo/db/db_raii',
        '$BUILD_DIR/mongo/db/service_context',
        '$BUILD_DIR/mongo/db/storage/durable_catalog_impl',
        '$BUILD_DIR/mongo/db/storage/wiredtiger/storage_wiredtiger_core',
        'collection_properties',
    ],
)

env.Library(
    target='import_collection',
    source=[
        'import_collection.cpp'
    ],
    LIBDEPS_PRIVATE=[
        '$BUILD_DIR/mongo/base',
        '$BUILD_DIR/mongo/db/audit',
        '$BUILD_DIR/mongo/db/catalog/collection',
        '$BUILD_DIR/mongo/db/catalog/collection_options',
        '$BUILD_DIR/mongo/db/catalog/database_holder',
        '$BUILD_DIR/mongo/db/concurrency/write_conflict_exception',
        '$BUILD_DIR/mongo/db/db_raii',
        '$BUILD_DIR/mongo/db/op_observer',
        '$BUILD_DIR/mongo/db/repl/oplog',
        '$BUILD_DIR/mongo/db/repl/repl_coordinator_interface',
        '$BUILD_DIR/mongo/db/service_context',
        '$BUILD_DIR/mongo/db/storage/durable_catalog_impl',
        '$BUILD_DIR/mongo/db/storage/storage_engine_impl',
        'collection_properties',
    ],
)

load("//bazel:mongo_src_rules.bzl", "idl_generator", "mongo_cc_library")

package(default_visibility = ["//src/mongo/db/modules/enterprise:__subpackages__"])

exports_files(
    glob([
        "*.h",
        "*.cpp",
    ]),
)

idl_generator(
    name = "encryption_options_gen",
    src = "encryption_options.idl",
)

idl_generator(
    name = "keystore_metadata_gen",
    src = "keystore_metadata.idl",
    deps = [
        "//src/mongo/db:basic_types_gen",
    ],
)

idl_generator(
    name = "encryption_key_manager_gen",
    src = "encryption_key_manager.idl",
)

idl_generator(
    name = "log_redact_options_gen",
    src = "log_redact_options.idl",
)

idl_generator(
    name = "decrypt_tool_options_gen",
    src = "decrypt_tool_options.idl",
)

mongo_cc_library(
    name = "log_redact_options",
    srcs = [
        "log_redact_options.cpp",
        "log_redact_options_gen",
    ],
    hdrs = [
        "log_redact_options.h",
    ],
    deps = [
        "//src/mongo/db:server_base",
        "//src/mongo/util/options_parser",
    ],
)

mongo_cc_library(
    name = "key_acquisition",
    srcs = [
        "encryption_key_acquisition.cpp",
    ],
    hdrs = [
        "encryption_key_acquisition.h",
    ],
    deps = [
        "//src/mongo/db/auth:security_file",
        "//src/mongo/db/modules/enterprise:kmip",
    ],
)

mongo_cc_library(
    name = "keystore_metadata",
    srcs = [
        "keystore_metadata.cpp",
        "keystore_metadata_gen",
    ],
    hdrs = [
        "keystore_metadata.h",
    ],
    deps = [
        "//src/mongo/crypto:symmetric_crypto",
        "//src/mongo/db:server_base",
        "//src/mongo/db:service_context",
        "//src/mongo/db/modules/enterprise:symmetric_crypto_enterprise",
        "//src/mongo/db/storage:storage_engine_metadata",
    ],
)

# -*- mode: python -*-
Import("env")
Import("wiredtiger")
Import("get_option")

env = env.Clone()

if not wiredtiger:
    env.FatalError("EncryptedStorage requires WiredTiger")

env.CppUnitTest(
    target="enterprise_encryptdb_test",
    source=[],
    LIBDEPS=[],
)

using_ubsan = False
sanitizer_list = get_option("sanitize")
if sanitizer_list:
    using_ubsan = "undefined" in sanitizer_list.split(",")

if not using_ubsan:
    env.CppUnitTest(
        target="enterprise_encryptdb_noubsan_test",
        source=[],
        LIBDEPS=[],
    )

env.Program(
    target="mongodecrypt",
    source=[
        "decrypt_tool.cpp",
        "decrypt_tool_options.cpp",
        "decrypt_tool_options_gen.cpp",
    ]
    + env.WindowsResourceFile("decrypt_tool.rc"),
    AIB_COMPONENT="mongodecrypt",
    AIB_COMPONENTS_EXTRA=[
        "dist",
        "dist-test",
        "tools",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/crypto/symmetric_crypto",
        "$BUILD_DIR/mongo/db/concurrency/lock_manager",
        "$BUILD_DIR/mongo/db/log_process_details",
        "$BUILD_DIR/mongo/db/server_base",
        "$BUILD_DIR/mongo/util/options_parser/options_parser_init",
        "$BUILD_DIR/mongo/util/signal_handlers",
        "$BUILD_DIR/mongo/util/version_impl",
        "../../kmip",
        "../../symmetric_crypto_enterprise",
        "key_acquisition",
    ],
)

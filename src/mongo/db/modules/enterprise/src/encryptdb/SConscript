# -*- mode: python -*-
Import("env")
Import("wiredtiger")
Import("get_option")

env = env.Clone()

using_ubsan = False
sanitizer_list = get_option('sanitize')
if sanitizer_list:
    using_ubsan = 'undefined' in sanitizer_list.split(',')

if not wiredtiger:
    env.FatalError("EncryptedStorage requires WiredTiger")

wtEnv = env.Clone()
wtEnv.InjectThirdPartyIncludePaths(libraries=['wiredtiger'])
# Ubuntu1204 exposes GCM symbols, but they do not work. We have to detect the platform and disable
# that portion of the symmetric_crypto test. Apple does not support GCM with native crypto, so
# we disable GCM, and its tests, when using OpenSSL.
if wtEnv['MONGO_DISTMOD'] == "ubuntu1204" or env.TargetOSIs('darwin', 'macOS'):
    wtEnv.Append(CPPDEFINES=["DISABLE_GCM_TESTVECTORS"]);


wtEnv.Library(target='encryption_key_manager_aux',
            source=[
                'encryption_key_manager_init.cpp',
                'encryption_server_status.cpp',
            ],
            LIBDEPS=[
                'encryptdb',
                'symmetric_crypto'
            ],
            LIBDEPS_PRIVATE=[
                '$BUILD_DIR/mongo/db/commands/server_status',
            ],
            PROGDEPS_DEPENDENTS=[
                '$BUILD_DIR/mongo/mongod',
            ])

wtEnv.Library(target='encryptdb',
              source=[
                   'encrypted_data_protector.cpp',
                   'encryption_key_manager.cpp',
                   'wiredtiger_encryption_callbacks.cpp',
              ],
              LIBDEPS=[
                   'key_acquisition',
                   'symmetric_crypto',
                   '$BUILD_DIR/mongo/base',
                   '$BUILD_DIR/mongo/db/storage/encryption_hooks',
                   '$BUILD_DIR/mongo/db/storage/wiredtiger/storage_wiredtiger_core',
                   '$BUILD_DIR/third_party/shim_wiredtiger',
              ],
              LIBDEPS_PRIVATE=[
                   '$BUILD_DIR/mongo/db/storage/storage_options'
              ],
)

env.Library(target='log_redact_options',
            source=[
                'log_redact_options.cpp',
                env.Idlc('log_redact_options.idl')[0],
            ],
            LIBDEPS_PRIVATE=[
                '$BUILD_DIR/mongo/util/options_parser/options_parser',
                '$BUILD_DIR/mongo/idl/server_parameter',
            ],
            PROGDEPS_DEPENDENTS=[
                '$BUILD_DIR/mongo/mongos'
            ],
)

env.Library(target='symmetric_crypto',
            source=[
                'symmetric_crypto.cpp',
                'symmetric_crypto_smoke.cpp',
                'symmetric_crypto_${MONGO_CRYPTO}.cpp',
                'symmetric_key.cpp',
                'encryption_options.cpp',
                'kmip_options.cpp'
            ],
            LIBDEPS=[
                '$BUILD_DIR/mongo/base/secure_allocator',
                '$BUILD_DIR/mongo/util/net/ssl_manager',
                '$BUILD_DIR/mongo/util/secure_zero_memory',
            ],
            LIBDEPS_PRIVATE=[
                '$BUILD_DIR/mongo/util/options_parser/options_parser',
                'log_redact_options'
            ]
)

env.Library(target='kmip',
            source=[
                'kmip_request.cpp',
                'kmip_response.cpp',
                'kmip_service.cpp',
            ],
            LIBDEPS=[
                '$BUILD_DIR/mongo/base',
                '$BUILD_DIR/mongo/util/net/network',
                'symmetric_crypto',
            ])

env.Library(
    target='key_acquisition',
    source=[
        'encryption_key_acquisition.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/mongo/db/auth/security_file',
        'kmip',
    ]
)

wtEnv.CppUnitTest(target='symmetric_crypto_test',
                source='symmetric_crypto_test.cpp',
                LIBDEPS=[
                    'symmetric_crypto',
                    '$BUILD_DIR/mongo/db/storage/storage_options',
                    '$BUILD_DIR/mongo/util/net/network',
                ])

env.CppUnitTest(target='kmip_response_test',
                source='kmip_response_test.cpp',
                LIBDEPS=[
                    'kmip',
                    'symmetric_crypto',
                    '$BUILD_DIR/mongo/util/net/network',
                ])

env.CppUnitTest(target='kmip_request_test',
                source='kmip_request_test.cpp',
                LIBDEPS=[
                    'kmip',
                    'symmetric_crypto',
                    '$BUILD_DIR/mongo/util/net/network',
                ])

if not using_ubsan:
    wtEnv.CppUnitTest(target='wiredtiger_encryption_test',
                    source='wiredtiger_encryption_test.cpp',
                    LIBDEPS=[
                        '$BUILD_DIR/mongo/db/auth/security_file',
                        '$BUILD_DIR/mongo/db/service_context',
                        '$BUILD_DIR/mongo/db/service_context_test_fixture',
                        '$BUILD_DIR/mongo/db/storage/wiredtiger/storage_wiredtiger_mock',
                        '$BUILD_DIR/mongo/util/net/network',
                        'encryptdb',
                        'symmetric_crypto',
                    ],
                    LIBDEPS_PRIVATE=[
                        '$BUILD_DIR/mongo/db/auth/authmocks',
                    ])

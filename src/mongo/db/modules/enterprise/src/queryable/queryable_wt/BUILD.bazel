load("//bazel:mongo_src_rules.bzl", "idl_generator", "mongo_cc_integration_test", "mongo_cc_library")

package(default_visibility = ["//src/mongo/db/modules/enterprise:__subpackages__"])

exports_files(
    glob([
        "*.h",
        "*.cpp",
    ]),
)

idl_generator(
    name = "queryable_global_options_gen",
    src = "queryable_global_options.idl",
)

mongo_cc_library(
    name = "queryable_wt",
    srcs = [
        "blockstore_fs.cpp",
        "queryable_global_options.cpp",
        "queryable_global_options_gen",
        "queryable_wt_init.cpp",
    ],
    hdrs = [
        "blockstore_fs.h",
        "queryable_global_options.h",
    ],
    target_compatible_with = select({
        "//bazel/config:use_wiredtiger_enabled": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    visibility = ["//visibility:public"],
    deps = [
        "//src/mongo/db:service_context",
        "//src/mongo/db/modules/enterprise/src/queryable/blockstore",
        "//src/mongo/db/storage:storage_engine_common",
        "//src/mongo/db/storage:storage_engine_impl",
        "//src/mongo/db/storage:storage_engine_metadata",
        "//src/mongo/db/storage/wiredtiger:storage_wiredtiger",
        "//src/mongo/db/storage/wiredtiger:storage_wiredtiger_core",
        "//src/mongo/util/options_parser",
    ],
)

mongo_cc_integration_test(
    name = "enterprise_queryable_wt_test",
    srcs = [
        "blockstore_fs_test.cpp",
    ],
    deps = [
        ":queryable_wt",
        "//src/mongo/db/auth:authmocks",
    ],
)

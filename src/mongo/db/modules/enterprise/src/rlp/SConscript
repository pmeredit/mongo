# -*- mode: python -*-

Import("env")
Import("debugBuild")

env = env.Clone()

if GetOption("rlp") == "on":
    env.Library(
        target='rlpcore',
        source=[
            'rlp_context.cpp',
            'rlp_environment.cpp',
            'rlp_language.cpp',
            'rlp_loader.cpp',
            'rlp_stringbuffer.cpp',
            'rlp_token_iterator.cpp',
            'rlp_token_iterator_factory.cpp',
            'rlp_tokenizer.cpp',
        ],
        LIBDEPS=[
            '$BUILD_DIR/mongo/db/fts/unicode/unicode'
        ],
        LIBDEPS_DEPENDENTS=[
            '$BUILD_DIR/mongo/mongodmain'
        ])

    env.Library(
        target='mongorlp',
        source=[
            'rlp_init.cpp',
            'rlp_options.cpp',
        ],
        LIBDEPS=[
            'rlpcore',
        ],
        LIBDEPS_DEPENDENTS=[
            '$BUILD_DIR/mongo/mongodmain'
        ])

    # The RLP library has various memory errors that tcmalloc detects in debug builds. When TCMalloc
    # detects an error it will log the error, and call abort() while holding a spinlock. Our abort
    # handler prints stack traces by calling backtrace() and this function needs to allocate memory
    # on most architectures. This memory allocation will thus cause a deadlock in the spinlock since
    # the spinlock is not recursive.
    if not debugBuild:
        env.CppUnitTest(
            target='rlp_language_test',
            source=[
                'rlp_language_test.cpp'
            ],
            LIBDEPS=[
                'rlpcore',
                "$BUILD_DIR/mongo/base",
                "$BUILD_DIR/mongo/db/common",
                "$BUILD_DIR/mongo/db/fts/base_fts",
            ])

#
# Copyright (C) 2023-present MongoDB, Inc. and subject to applicable commercial license.
#

global:
    cpp_namespace: "mongo::magic_restore"
    cpp_includes:
        - "magic_restore/magic_restore.h"

imports:
    - "mongo/db/basic_types.idl"
    - "mongo/db/repl/repl_set_config.idl"
    - "mongo/db/s/type_shard_identity.idl"
    - "mongo/s/sharding_types.idl"
    - "mongo/db/commands/user_management_commands.idl"

enums:
    NodeType:
        description: >
            The types of nodes to restore.
        type: string
        values:
            kReplicaSet: "replicaSet"
            kShard: "shard"
            kConfigShard: "configShard"
            kDedicatedConfigServer: "configServer"

structs:
    NamespaceUUIDPair:
        description: >
            Structure to represent a collection's namespace and UUID. Used for collectionsToRestore and systemUuids parameters.
        fields:
            ns:
                type: namespacestring
            uuid:
                type: uuid

    ShardRenameMapping:
        description: >
            Structure for describing what changes to make to the sharding metadata for an individual
            shard.
        fields:
            sourceShardName:
                description: Existing name of the shard in the backup files.
                type: shard_id
            destinationShardName:
                description: Desired name of the shard in the cluster created for the restore.
                type: shard_id
            destinationShardConnectionString:
                description: >
                    The connection string for this shard in the destination cluster. In the
                    replSetName/member1,member2 format.
                type: string

    BalancerSettings:
        description: >
            Structure to enable/disable the balancer after a sharded cluster restore.
        fields:
            stopped:
                description: Whether or not the balancer is disabled after the restore.
                type: bool

    AutomationCredentials:
        description: >
            Structure that includes automation agent credential commands to upsert.
        fields:
            createRoleCommands:
                description: >
                    The list of createRole commands to run during magic restore. If a role exists,
                    the command will convert to updateRole. Note that the command object must
                    contain a $db field, to indicate what database to apply the create operation on.
                type: array<object_owned>
            createUserCommands:
                description: >
                    The list of createUser commands to run during magic restore. If a user exists,
                    the command will convert to updateUser. Note that the command object must
                    contain a $db field, to indicate what database to apply the create operation on.
                type: array<object_owned>

    RestoreConfiguration:
        description: >
            Options used in magic restore.
        strict: true
        cpp_validator_func: "validateRestoreConfiguration"
        fields:
            nodeType:
                description: >
                    The type of node to restore.
                type: NodeType
            replicaSetConfig:
                description: >
                    The new replica set configuration to install during magic restore.
                type: ReplSetConfigBase
            pointInTimeTimestamp:
                description: >
                    Used to restore the node up to a point-in-time when inserting additional
                    oplog entries for a PIT restore.
                type: timestamp
                optional: true
            restoreToHigherTermThan:
                description: >
                    Value installed as the latest term on the restored node. Drivers maintain
                    the last term it received from a replica set, and this field is used to
                    preserve those connections.
                type: long
                optional: true
                validator: { gte: 1, lt: 2147483648 }
            maxCheckpointTs:
                description: >
                    Used to truncate the oplog at the beginning of the restore process.
                    This can be considered the starting point of the PIT restore process. For a single
                    replica set restore, this is the checkpoint timestamp of the snapshotted data files. For a
                    sharded cluster restore, we open backup cursors on all nodes in the cluster and use the
                    maximum checkpoint timestamp amongst them as the consistent image we want to restore in the
                    sharded cluster. As a result, there is no way for a shard node to know this cluster-wide
                    timestamp from the local WT data, so we must pass this parameter into the restore
                    configuration. For ease of use, we also pass in the value for replica set nodes.
                type: timestamp
            collectionsToRestore:
                description: >
                    A list of collections to selectively restore.
                type: array<NamespaceUUIDPair>
                optional: true
            shardingRename:
                description: >
                    A list of documents specifying which shard names to update during the restore.
                type: array<ShardRenameMapping>
                optional: true
            shardIdentityDocument:
                description: >
                    The new shard identity document to install during magic restore.
                type: ShardIdentity
                optional: true
            seedForUuids:
                description: >
                    Seed value to generate consistent UUIDs when creating new system collections
                    on the restored node, to ensure consistency amongst the replica set.
                type: objectid
                optional: true
            balancerSettings:
                type: BalancerSettings
                optional: true
            automationCredentials:
                type: AutomationCredentials
                optional: true
            systemUuids:
                description: >
                    A list of namespace UUID pairs, used to create internal collections that need
                    to have the same UUID across nodes.
                type: array<NamespaceUUIDPair>
                optional: true

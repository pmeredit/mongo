# -*- mode: python -*-

Import("env")
Import("wiredtiger")
Import("get_option")

env = env.Clone()

env.CppLibfuzzerTest(
    target="protocol_fuzzer",
    source=[
        "protocol_fuzzer.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/db/concurrency/lock_manager",
        "$BUILD_DIR/mongo/db/query/write_ops/write_ops_parsers",
        "$BUILD_DIR/mongo/transport/message_compressor",
        "message",
        "rpc",
    ],
)

if wiredtiger:
    env.CppUnitTest(
        target="rpc_test",
        source=[
            "get_status_from_command_result_test.cpp",
            "metadata/client_metadata_test.cpp",
            "metadata/egress_metadata_hook_list_test.cpp",
            "metadata/oplog_query_metadata_test.cpp",
            "metadata/repl_set_metadata_test.cpp",
            "metadata/security_token_metadata_test.cpp",
            "metadata_test.cpp",
            "object_check_test.cpp",
            "op_msg_test.cpp",
            "reply_builder_test.cpp",
            "rewrite_state_change_errors_test.cpp",
        ],
        LIBDEPS=[
            "$BUILD_DIR/mongo/client/clientdriver_minimal",
            "$BUILD_DIR/mongo/db/auth/auth",
            "$BUILD_DIR/mongo/db/auth/authmocks",
            "$BUILD_DIR/mongo/db/server_base",
            "$BUILD_DIR/mongo/db/service_context_non_d",
            "$BUILD_DIR/mongo/db/service_context_test_fixture",
            "$BUILD_DIR/third_party/wiredtiger/wiredtiger_checksum",
            "client_metadata",
            "metadata",
            "rewrite_state_change_errors",
            "rpc",
        ],
    )

env.CppIntegrationTest(
    target="rpc_integration_test",
    source=[
        "op_msg_integration_test.cpp",
        "op_legacy_integration_test.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/mongo/client/clientdriver_network",
        "$BUILD_DIR/mongo/transport/transport_layer_egress_init",
        "$BUILD_DIR/mongo/util/version_impl",
        "message",
    ],
)

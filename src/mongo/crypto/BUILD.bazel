load("//bazel:mongo_src_rules.bzl", "idl_generator", "mongo_cc_library")

package(default_visibility = ["//visibility:public"])

exports_files(
    glob([
        "*.h",
        "*.cpp",
    ]),
)

idl_generator(
    name = "encryption_fields_gen",
    src = "encryption_fields.idl",
    deps = [
        "//src/mongo/db:basic_types_gen",
    ],
)

idl_generator(
    name = "fle_options_gen",
    src = "fle_options.idl",
    deps = [
        "//src/mongo/idl:cluster_server_parameter_gen",
    ],
)

idl_generator(
    name = "fle_stats_gen",
    src = "fle_stats.idl",
    deps = [
        "//src/mongo/db:basic_types_gen",
    ],
)

idl_generator(
    name = "fle_tokens_gen",
    src = "fle_tokens.idl",
    deps = [
        "//src/mongo/db:basic_types_gen",
    ],
)

idl_generator(
    name = "fle_field_schema_gen",
    src = "fle_field_schema.idl",
    deps = [
        ":encryption_fields_gen",
        "//src/mongo/db:basic_types_gen",
    ],
)

idl_generator(
    name = "jwt_types_gen",
    src = "jwt_types.idl",
    deps = [
        "//src/mongo/db:basic_types_gen",
    ],
)

idl_generator(
    name = "jwt_parameters_gen",
    src = "jwt_parameters.idl",
)

idl_generator(
    name = "sha256_block_gen",
    src = "sha256_block.idl",
    deps = [
        "//src/mongo/db:basic_types_gen",
    ],
)

idl_generator(
    name = "sha1_block_gen",
    src = "sha1_block.idl",
    deps = [
        "//src/mongo/db:basic_types_gen",
    ],
)

mongo_cc_library(
    name = "sha1_block",
    srcs = [
        "sha1_block.cpp",
    ],
    hdrs = [
        "sha1_block.h",
    ],
    header_deps = [
        "//src/mongo/db/exec/sbe:query_sbe_plan_stats",
    ],
    deps = [
        "//src/mongo:base",
        "//src/mongo/util:secure_compare_memory",
    ],
)

mongo_cc_library(
    name = "sha256_block",
    srcs = [
        "sha256_block.cpp",
    ],
    hdrs = [
        "sha256_block.h",
    ],
    header_deps = [
        "//src/mongo/db/exec/sbe:query_sbe_plan_stats",
    ],
    deps = [
        "//src/mongo:base",
        "//src/mongo/util:secure_compare_memory",
    ],
)

[
    mongo_cc_library(
        name = "sha_block_{}".format(mongo_crypto),
        srcs = [
            "sha_block_{}.cpp".format(mongo_crypto),
        ],
        hdrs = [
            "hash_block.h",
            "sha512_block.h",
        ],
        header_deps = [
            "//src/mongo/db/concurrency:flow_control_ticketholder",
        ],
        local_defines = ["LTC_NO_PROTOTYPES"] if mongo_crypto == "tom" else [],
        target_compatible_with = select({
            "//bazel/config:mongo_crypto_{}".format(mongo_crypto): [],
            "//conditions:default": ["@platforms//:incompatible"],
        }),
        deps = [
            ":sha1_block",
            ":sha256_block",
            "//src/mongo:base",
        ],
    )
    for mongo_crypto in [
        "windows",
        "apple",
        "openssl",
        "tom",
    ]
]
